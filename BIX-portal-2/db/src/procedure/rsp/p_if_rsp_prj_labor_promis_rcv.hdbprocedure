/**
* RSP_PRJ_LABOR 수신 프로시져
*/

PROCEDURE P_IF_RSP_PRJ_LABOR_PROMIS_RCV (
	IN VER NVARCHAR(20),
    IN JSONDATA CLOB                    
)
LANGUAGE SQLSCRIPT SQL SECURITY INVOKER AS
BEGIN
	
    DECLARE V_IF_TABLE NVARCHAR(50) := 'RSP_IF_PRJ_LABOR';
	DECLARE V_START_TIME TIMESTAMP DEFAULT CURRENT_TIMESTAMP;
	DECLARE V_INSERT_CNT INTEGER := 0;

	INSERT INTO RSP_IF_PRJ_LABOR (
		-- 인터페이스 정보
		VER,
		FLAG,
		-- 인터페이스 테이블 컬럼
		YEAR,
		YEAR_MONTH,
		MONTH,
		CCORG_CD,
		PRJ_NO,
		ACTUAL_YN,
		BILL_AMT,
		INDIRECT_COST,
		EAI_PCS_DTTM,
		EAI_DATA_SEQ,
		EAI_CRUD_CD
	)
	WITH JSON_STRING AS (SELECT :JSONDATA AS INPUT FROM DUMMY)
	SELECT
		-- 인터페이스 정보
		:VER AS VER,
		NULL AS FLAG,
		-- 인터페이스 JSON 데이터 컬럼
		JT.YEAR,
		JT.YEAR_MONTH,
		LPAD(JT.MONTH,2,'0') AS MONTH,
		JT.CCORG_CD,
		JT.PRJ_NO,
		CASE 
			WHEN UPPER(JT.ACTUAL_YN) = 'TRUE' THEN TRUE
			ELSE FALSE
		END AS ACTUAL_YN,
		IFNULL(JT.BILL_AMT,0),
		IFNULL(JT.INDIRECT_COST,0),
		JT.EAI_PCS_DTTM,
		JT.EAI_DATA_SEQ,
		JT.EAI_CRUD_CD
	FROM
		-- I/F API의 JSON PROPERTY 의 KEY값과 IF 테이블 컬럼명 매핑
		JSON_TABLE (JSON_STRING.INPUT, '$.DATA[*]'
		COLUMNS
			(   
				YEAR          		NVARCHAR(4) 			PATH '$.YEAR',
				YEAR_MONTH    		NVARCHAR(6) 			PATH '$.YEAR_MONTH',
				MONTH    			NVARCHAR(6) 			PATH '$.MONTH',
				CCORG_CD      		NVARCHAR(10)			PATH '$.CCORG_CD',
				PRJ_NO        		NVARCHAR(30)			PATH '$.PRJ_NO',
				ACTUAL_YN     		NVARCHAR(10) 			PATH '$.ACTUAL_YN',
				BILL_AMT      		DECIMAL 				PATH '$.BILL_AMT',
				INDIRECT_COST		DECIMAL 				PATH '$.INDIRECT_COST',
				EAI_PCS_DTTM 		SECONDDATE 				PATH '$.EAI_PCS_DTTM',			--EAI I/F 처리시간
				EAI_DATA_SEQ 		INTEGER 				PATH '$.EAI_DATA_SEQ',			--EAI 시퀀스
				EAI_CRUD_CD 		NVARCHAR(1)				PATH '$.EAI_CRUD_CD'			--EAI 처리 코드
			)
		) AS JT;

	V_INSERT_CNT = ::ROWCOUNT;

	INSERT INTO COMMON_INTERFACE_LOG
	(VER, UUID, CREATEDAT, IF_STEP, SOURCE, TABLE_NAME, PROCEDURE_NAME, EXECUTE_TIME, ROW_COUNT, SUCCESS_YN, ERR_CD, LOG)
	VALUES
	(:VER, SYSUUID, CURRENT_TIMESTAMP, 'RCV', 'PROMIS', :V_IF_TABLE, ::CURRENT_OBJECT_NAME, ROUND(SECONDS_BETWEEN(CURRENT_TIMESTAMP, :V_START_TIME) * 1000,0), :V_INSERT_CNT, true, null, null);

END;