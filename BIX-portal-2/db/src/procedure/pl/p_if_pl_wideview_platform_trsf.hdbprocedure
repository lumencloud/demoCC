/**
* PROJECT 정보 I/F TABLE -> BIX TABLE TRANSFER
*
* > O_RESULT : 로그 저장
*/
PROCEDURE P_IF_PL_WIDEVIEW_PLATFORM_PROMIS_TRSF (
	IN VER NVARCHAR(20),
	OUT O_RESULT TABLE (
		RESULT_CODE NVARCHAR(30)
		, VER NVARCHAR(20)
		, SQL_ERROR_CODE NVARCHAR(30)
		, SQL_ERROR_MESSAGE NVARCHAR(500)
	)
)
LANGUAGE SQLSCRIPT
SQL SECURITY INVOKER
AS
BEGIN
USING SQLSCRIPT_PRINT AS LIB;

	DECLARE V_USER_NAME NVARCHAR(10) = 'IF_SYS';
	DECLARE V_START_TIME TIMESTAMP DEFAULT CURRENT_TIMESTAMP;
	DECLARE V_IF_TABLE NVARCHAR(50) DEFAULT 'PL_IF_PLATFORM';
	DECLARE V_INSERT_CNT INTEGER = 0;
	DECLARE V_DUMMY INTEGER;

	/* SQL ERROR 처리 */
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		ROLLBACK;

		:O_RESULT.INSERT(('NG', :VER, ::SQL_ERROR_CODE, SUBSTR(::SQL_ERROR_MESSAGE,0,500)));

		INSERT INTO COMMON_INTERFACE_LOG
		(VER, UUID, CREATEDAT, IF_STEP, SOURCE, TABLE_NAME, PROCEDURE_NAME, EXECUTE_TIME, ROW_COUNT, SUCCESS_YN, ERR_CD, LOG)
		VALUES
		(:VER, SYSUUID, CURRENT_TIMESTAMP, 'TRSF', 'PL_IF_PLATFORM', :V_IF_TABLE, ::CURRENT_OBJECT_NAME, NULL, NULL, false, ::SQL_ERROR_CODE, SUBSTR(::SQL_ERROR_MESSAGE,0,500));	

	END;

	/***********************************************
	VALIDATION
	***********************************************/

	:O_RESULT.INSERT(('OK', :VER, NULL, '[OK]-STEP [PROCEDURE START]'));

	-- [STEP-1] I/F 테이블 확인 (해당 버전 데이터가 IF 테이블에 존재하는지 체크)
	
	SELECT 1
	INTO V_DUMMY
	FROM PL_IF_PLATFORM
	WHERE VER = :VER
	-- AND FLAG IS NULL	-- FLAG 사용 의미가 없어짐, 우선 생략 추후 제거 or 로직 정리
	LIMIT 1
	;
		
	-- [STEP-2] IF DATA 등록

	V_PLATFORM = SELECT
		VER,
		SUBSTRING(YEAR_MONTH,1,4) AS YEAR,
		CASE 
			WHEN SUBSTRING(YEAR_MONTH,5,2) = '12' AND TO_INTEGER(SUBSTRING(VER,2,4)) > TO_INTEGER(SUBSTRING(YEAR_MONTH,1,4))
			THEN '13'
		ELSE SUBSTRING(YEAR_MONTH,5,2)
		END AS MONTH,
		PRJ_NO,
		ROW_NUMBER() OVER (PARTITION BY PRJ_NO) AS SEQ,
		'P' AS "SRC_TYPE",
		PRJ_NM,
		BIZ_OPP_NO,
		CSTCO_CD,
		SALE_CCORG_CD,
		CNVG_BIZ_YN,
		DT_TP,
		TECH_NM,
		BRAND_NM,
		QUOTE_ISSUE_NO,
		QUOTE_TARGET_NO,
		-- TP.VALUE AS PRJ_TP_CD,
		-- BD1.NAME AS BD_N1_CD,
		-- BD2.NAME AS BD_N2_CD,
		IFNULL(SALE_M1_AMT,0) AS SALE_M1_AMT,
		IFNULL(SALE_M2_AMT,0) AS SALE_M2_AMT,
		IFNULL(SALE_M3_AMT,0) AS SALE_M3_AMT,
		IFNULL(SALE_M4_AMT,0) AS SALE_M4_AMT,
		IFNULL(SALE_M5_AMT,0) AS SALE_M5_AMT,
		IFNULL(SALE_M6_AMT,0) AS SALE_M6_AMT,
		IFNULL(SALE_M7_AMT,0) AS SALE_M7_AMT,
		IFNULL(SALE_M8_AMT,0) AS SALE_M8_AMT,
		IFNULL(SALE_M9_AMT,0) AS SALE_M9_AMT,
		IFNULL(SALE_M10_AMT,0) AS SALE_M10_AMT,
		IFNULL(SALE_M11_AMT,0) AS SALE_M11_AMT,
		IFNULL(SALE_M12_AMT,0) AS SALE_M12_AMT,
		IFNULL(PRJ_PRFM_M1_AMT,0) AS PRJ_PRFM_M1_AMT,
		IFNULL(PRJ_PRFM_M2_AMT,0) AS PRJ_PRFM_M2_AMT,
		IFNULL(PRJ_PRFM_M3_AMT,0) AS PRJ_PRFM_M3_AMT,
		IFNULL(PRJ_PRFM_M4_AMT,0) AS PRJ_PRFM_M4_AMT,
		IFNULL(PRJ_PRFM_M5_AMT,0) AS PRJ_PRFM_M5_AMT,
		IFNULL(PRJ_PRFM_M6_AMT,0) AS PRJ_PRFM_M6_AMT,
		IFNULL(PRJ_PRFM_M7_AMT,0) AS PRJ_PRFM_M7_AMT,
		IFNULL(PRJ_PRFM_M8_AMT,0) AS PRJ_PRFM_M8_AMT,
		IFNULL(PRJ_PRFM_M9_AMT,0) AS PRJ_PRFM_M9_AMT,
		IFNULL(PRJ_PRFM_M10_AMT,0) AS PRJ_PRFM_M10_AMT,
		IFNULL(PRJ_PRFM_M11_AMT,0) AS PRJ_PRFM_M11_AMT,
		IFNULL(PRJ_PRFM_M12_AMT,0) AS PRJ_PRFM_M12_AMT,
		(IFNULL(SALE_M1_AMT,0) - IFNULL(PRJ_PRFM_M1_AMT,0)) AS MARGIN_M1_AMT,
		(IFNULL(SALE_M2_AMT,0) - IFNULL(PRJ_PRFM_M2_AMT,0)) AS MARGIN_M2_AMT,
		(IFNULL(SALE_M3_AMT,0) - IFNULL(PRJ_PRFM_M3_AMT,0)) AS MARGIN_M3_AMT,
		(IFNULL(SALE_M4_AMT,0) - IFNULL(PRJ_PRFM_M4_AMT,0)) AS MARGIN_M4_AMT,
		(IFNULL(SALE_M5_AMT,0) - IFNULL(PRJ_PRFM_M5_AMT,0)) AS MARGIN_M5_AMT,
		(IFNULL(SALE_M6_AMT,0) - IFNULL(PRJ_PRFM_M6_AMT,0)) AS MARGIN_M6_AMT,
		(IFNULL(SALE_M7_AMT,0) - IFNULL(PRJ_PRFM_M7_AMT,0)) AS MARGIN_M7_AMT,
		(IFNULL(SALE_M8_AMT,0) - IFNULL(PRJ_PRFM_M8_AMT,0)) AS MARGIN_M8_AMT,
		(IFNULL(SALE_M9_AMT,0) - IFNULL(PRJ_PRFM_M9_AMT,0)) AS MARGIN_M9_AMT,
		(IFNULL(SALE_M10_AMT,0) - IFNULL(PRJ_PRFM_M10_AMT,0)) AS MARGIN_M10_AMT,
		(IFNULL(SALE_M11_AMT,0) - IFNULL(PRJ_PRFM_M11_AMT,0)) AS MARGIN_M11_AMT,
		(IFNULL(SALE_M12_AMT,0) - IFNULL(PRJ_PRFM_M12_AMT,0)) AS MARGIN_M12_AMT
	FROM PL_IF_PLATFORM AS PLATFORM
	-- LEFT JOIN COMMON_CODE_ITEM AS TP
	-- ON (
	-- 	UPPER(REPLACE(PLATFORM.PRJ_TP_CD,' ','')) = UPPER(REPLACE(TP.NAME,' ',''))
	-- 	OR UPPER(REPLACE(PLATFORM.PRJ_TP_CD,' ','')) = UPPER(REPLACE(TP.VALUE,' ',''))
	-- 	OR UPPER(REPLACE(PLATFORM.PRJ_TP_CD,' ','')) = UPPER(REPLACE(TP.MEMO,' ',''))	-- temp
	-- )
	-- AND TP.HEADER_ID = (
	-- 	SELECT ID FROM COMMON_CODE_HEADER WHERE UPPER(CATEGORY) = 'PROJECT_TYPE' LIMIT 1
	-- )
	-- LEFT JOIN COMMON_CODE_ITEM AS BD1
	-- 	ON TP.VALUE_OPT1 = BD1.VALUE
	-- 	AND TP.HEADER_OPT1_ID = BD1.HEADER_ID
	-- LEFT JOIN COMMON_CODE_ITEM AS BD2
	-- 	ON TP.VALUE_OPT2 = BD2.VALUE
	-- 	AND TP.HEADER_OPT2_ID = BD2.HEADER_ID
	WHERE VER = :VER
	-- AND FLAG IS NULL	-- FLAG 사용 의미가 없어짐, 우선 생략 추후 제거 or 로직 정리
	;

	-- [STEP-2] PROJECT 정보 IF DATA 등록
		
	-- PL_WIDEVIEW
	V_START_TIME = CURRENT_TIMESTAMP;
	V_IF_TABLE = 'PL_WIDEVIEW';

	INSERT INTO PL_WIDEVIEW (
		CREATEDAT,
		CREATEDBY,
		MODIFIEDAT,
		MODIFIEDBY,
		VER,
		YEAR,
		MONTH,
		PRJ_NO,
		SEQ,
		SRC_TYPE,
		SALE_M1_AMT,
		SALE_M2_AMT,
		SALE_M3_AMT,
		SALE_M4_AMT,
		SALE_M5_AMT,
		SALE_M6_AMT,
		SALE_M7_AMT,
		SALE_M8_AMT,
		SALE_M9_AMT,
		SALE_M10_AMT,
		SALE_M11_AMT,
		SALE_M12_AMT,
		PRJ_PRFM_M1_AMT,
		PRJ_PRFM_M2_AMT,
		PRJ_PRFM_M3_AMT,
		PRJ_PRFM_M4_AMT,
		PRJ_PRFM_M5_AMT,
		PRJ_PRFM_M6_AMT,
		PRJ_PRFM_M7_AMT,
		PRJ_PRFM_M8_AMT,
		PRJ_PRFM_M9_AMT,
		PRJ_PRFM_M10_AMT,
		PRJ_PRFM_M11_AMT,
		PRJ_PRFM_M12_AMT,
		MARGIN_M1_AMT,
		MARGIN_M2_AMT,
		MARGIN_M3_AMT,
		MARGIN_M4_AMT,
		MARGIN_M5_AMT,
		MARGIN_M6_AMT,
		MARGIN_M7_AMT,
		MARGIN_M8_AMT,
		MARGIN_M9_AMT,
		MARGIN_M10_AMT,
		MARGIN_M11_AMT,
		MARGIN_M12_AMT
	)
	WITH IF_DATA AS (
		SELECT * FROM :V_PLATFORM
	)
	SELECT
		:V_START_TIME,
		:V_USER_NAME,
		:V_START_TIME,
		:V_USER_NAME,
		VER,
		YEAR,
		MONTH,
		PRJ_NO,
		SEQ,
		SRC_TYPE,
		IFNULL(SALE_M1_AMT,0),
		IFNULL(SALE_M2_AMT,0),
		IFNULL(SALE_M3_AMT,0),
		IFNULL(SALE_M4_AMT,0),
		IFNULL(SALE_M5_AMT,0),
		IFNULL(SALE_M6_AMT,0),
		IFNULL(SALE_M7_AMT,0),
		IFNULL(SALE_M8_AMT,0),
		IFNULL(SALE_M9_AMT,0),
		IFNULL(SALE_M10_AMT,0),
		IFNULL(SALE_M11_AMT,0),
		IFNULL(SALE_M12_AMT,0),
		IFNULL(PRJ_PRFM_M1_AMT,0),
		IFNULL(PRJ_PRFM_M2_AMT,0),
		IFNULL(PRJ_PRFM_M3_AMT,0),
		IFNULL(PRJ_PRFM_M4_AMT,0),
		IFNULL(PRJ_PRFM_M5_AMT,0),
		IFNULL(PRJ_PRFM_M6_AMT,0),
		IFNULL(PRJ_PRFM_M7_AMT,0),
		IFNULL(PRJ_PRFM_M8_AMT,0),
		IFNULL(PRJ_PRFM_M9_AMT,0),
		IFNULL(PRJ_PRFM_M10_AMT,0),
		IFNULL(PRJ_PRFM_M11_AMT,0),
		IFNULL(PRJ_PRFM_M12_AMT,0),
		IFNULL(MARGIN_M1_AMT,0),
		IFNULL(MARGIN_M2_AMT,0),
		IFNULL(MARGIN_M3_AMT,0),
		IFNULL(MARGIN_M4_AMT,0),
		IFNULL(MARGIN_M5_AMT,0),
		IFNULL(MARGIN_M6_AMT,0),
		IFNULL(MARGIN_M7_AMT,0),
		IFNULL(MARGIN_M8_AMT,0),
		IFNULL(MARGIN_M9_AMT,0),
		IFNULL(MARGIN_M10_AMT,0),
		IFNULL(MARGIN_M11_AMT,0),
		IFNULL(MARGIN_M12_AMT,0)
	FROM IF_DATA;

	V_INSERT_CNT = ::ROWCOUNT;
	:O_RESULT.INSERT(('OK', :VER, NULL, '[OK] STEP-2 [PASS]-['||:V_IF_TABLE||' INSERT COUNT =>'||:V_INSERT_CNT||']'));

	INSERT INTO COMMON_INTERFACE_LOG
	(VER, UUID, CREATEDAT, IF_STEP, SOURCE, TABLE_NAME, PROCEDURE_NAME, EXECUTE_TIME, ROW_COUNT, SUCCESS_YN, ERR_CD, LOG)
	VALUES
	(:VER, SYSUUID, CURRENT_TIMESTAMP, 'TRSF', 'PL_IF_PLATFORM', :V_IF_TABLE, ::CURRENT_OBJECT_NAME, ROUND(SECONDS_BETWEEN(CURRENT_TIMESTAMP, :V_START_TIME) * 1000,0), :V_INSERT_CNT, true, null, null);
	
	-- COMMON_PROJECT_PLATFORM
		
	V_START_TIME = CURRENT_TIMESTAMP;
	V_IF_TABLE = 'COMMON_PROJECT_PLATFORM';

	INSERT INTO COMMON_PROJECT_PLATFORM (
		CREATEDAT,
		CREATEDBY,
		MODIFIEDAT,
		MODIFIEDBY,
		VER,
		PRJ_NO,
		SEQ,
		PRJ_NM,
		BIZ_OPP_NO,
		CSTCO_CD,
		SALE_CCORG_CD,
		CNVG_BIZ_YN,
		DT_TP,
		TECH_NM,
		BRAND_NM,
		QUOTE_ISSUE_NO,
		QUOTE_TARGET_NO
		-- ,PRJ_TP_CD
	)
	WITH IF_DATA AS (
		SELECT * FROM :V_PLATFORM
	)
	SELECT
		:V_START_TIME,
		:V_USER_NAME,
		:V_START_TIME,
		:V_USER_NAME,
		VER,
		PRJ_NO,
		SEQ,
		PRJ_NM,
		BIZ_OPP_NO,
		CSTCO_CD,
		SALE_CCORG_CD,
		CASE CNVG_BIZ_YN
			WHEN 'Y' THEN TRUE
			ELSE FALSE
		END AS CNVG_BIZ_YN,
		DT_TP,
		TECH_NM,
		BRAND_NM,
		QUOTE_ISSUE_NO,
		QUOTE_TARGET_NO
		-- ,PRJ_TP_CD
	FROM IF_DATA;

	V_INSERT_CNT = ::ROWCOUNT;
	:O_RESULT.INSERT(('OK', :VER, NULL, '[OK] STEP-2 [PASS]-['||:V_IF_TABLE||' INSERT COUNT =>'||:V_INSERT_CNT||']'));

	INSERT INTO COMMON_INTERFACE_LOG
	(VER, UUID, CREATEDAT, IF_STEP, SOURCE, TABLE_NAME, PROCEDURE_NAME, EXECUTE_TIME, ROW_COUNT, SUCCESS_YN, ERR_CD, LOG)
	VALUES
	(:VER, SYSUUID, CURRENT_TIMESTAMP, 'TRSF', 'PL_IF_PLATFORM', :V_IF_TABLE, ::CURRENT_OBJECT_NAME, ROUND(SECONDS_BETWEEN(CURRENT_TIMESTAMP, :V_START_TIME) * 1000,0), :V_INSERT_CNT, true, null, null);

	UPDATE PL_IF_PLATFORM
	SET FLAG = 'S'
	WHERE FLAG IS NULL
	AND VER = :VER;

	-- [STEP-3] I/F DATA 등록 처리결과 등록
	:O_RESULT.INSERT(('OK', :VER, NULL, '[OK]-PROCEDURE SUCCESS... COUNT => ['||:V_INSERT_CNT||']'));

END;