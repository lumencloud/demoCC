VIEW COMMON_MIS_GET_ORG_ANCESTOR_TARGET(IN ID NVARCHAR(20)) AS

SELECT
MIS_COM_ORG.ID,
MIS_COM_ORG.UPR_ORG_ID,
MIS_COM_ORG.ORG_KOR_NM,
(HIERARCHY.LEVEL - 1) AS HIERARCHY_LEVEL,
MIS_COM_ORG.ORG_TP_RCID,
HIERARCHY.HAS_CHILD AS HAS_CHILD

FROM (
	SELECT 
	DISTINCT(PARENT_ID) AS ID, 
	NODE_ID AS UPR_ORG_ID, 
	ORG_KOR_NM AS ORG_KOR_NM,
	HIERARCHY_TREE_SIZE AS LEVEL,
	CASE WHEN MAX(HIERARCHY_LEVEL) <> 1 THEN TRUE ELSE FALSE END AS HAS_CHILD
	
	FROM HIERARCHY ( 
		SOURCE ( 
			SELECT 
			MIS_COM_ORG.ID AS PARENT_ID,
			MIS_COM_ORG.UPR_ORG_ID AS NODE_ID,
			MIS_COM_ORG.ORG_KOR_NM AS ORG_KOR_NM
			
			FROM COMMON_MIS_COM_ORG AS MIS_COM_ORG
			WHERE VRTL_ORG_YN = FALSE
			AND USE_YN = TRUE
		) 
	START WHERE ID = :ID )

	GROUP BY PARENT_ID, NODE_ID, ORG_KOR_NM, HIERARCHY_TREE_SIZE
	ORDER BY LEVEL ASC, ID ASC
) AS HIERARCHY
JOIN COMMON_MIS_COM_ORG AS MIS_COM_ORG ON HIERARCHY.ID = MIS_COM_ORG.ID

ORDER BY HIERARCHY_LEVEL, ID ASC