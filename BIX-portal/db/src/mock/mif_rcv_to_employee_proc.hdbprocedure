/**
* (Procedure) MIF_RCV_TO_EMPLOYEE_PROC
* * * *
* - 설명 : 사원정보 I/F Data 등록
* - 파라메터 : P_PROC_DATE(수행일자) - YYYYMMDD ex) '20240101'
* - 수행주기 : 일 배치
* - History
*   - 2024.01.16 : 최초작성
*
*/
PROCEDURE MIF_RCV_TO_EMPLOYEE_PROC (
                    IN P_PROC_DATE NVARCHAR(8)
					, OUT O_RESULT TABLE (
						  RESULT_CODE NVARCHAR(30)
						, RESULT_MESSAGE_CODE NVARCHAR(50)
						, RESULT_MESSAGE_PARAMS NVARCHAR(300)
						, ERROR_TYPE NVARCHAR(30)
						, SQL_ERROR_CODE NVARCHAR(30)
						, SQL_ERROR_MESSAGE NVARCHAR(300)
					)
)
LANGUAGE SQLSCRIPT
SQL SECURITY INVOKER
AS
BEGIN
USING SQLSCRIPT_PRINT as LIB;

	DECLARE V_PROC_ID NVARCHAR(50) := 'MIF_RCV_TO_EMPLOYEE_PROC';
	DECLARE V_ERROR_TYPE NVARCHAR(30);

	DECLARE v_user_id NVARCHAR(255) DEFAULT 'BATCH';
	DECLARE v_curr_dtm SECONDDATE;
	DECLARE v_insert_cnt INTEGER := 0;
	DECLARE v_update_cnt INTEGER := 0;
	DECLARE v_delete_cnt INTEGER := 0;

	/***********************************************
	예외 처리
	***********************************************/
	DECLARE V_ERR_USER_ERRCD CONDITION FOR SQL_ERROR_CODE 19999;  -- 사용자 정의  Error코드

	DECLARE V_ERR_VALID CONDITION FOR SQL_ERROR_CODE 10000;       -- INPUT PARAM ERROR
	DECLARE V_ERR_INSERT CONDITION FOR SQL_ERROR_CODE 10100;      -- INSERT CONDITION ERROR
	DECLARE V_ERR_DELETE CONDITION FOR SQL_ERROR_CODE 10200;      -- DELETE CONDITION ERROR
	DECLARE V_ERR_UPDATE CONDITION FOR SQL_ERROR_CODE 10300;      -- UPDATE CONDITION ERROR

	/* SQL Error 처리 */
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		-- procedure처리중 Error발생시 Error건 또는 전체건을 rollback처리할 것인지 재확인
		ROLLBACK;
		----------------VALIDATION 오류----------------
		IF ::SQL_ERROR_CODE = 10000 THEN
		  V_ERROR_TYPE = 'ERR_VALID';
		----------------INSERT 오류----------------
		ELSEIF ::SQL_ERROR_CODE = 10100 THEN
		  V_ERROR_TYPE = 'ERR_INS';
		----------------삭제처리 오류----------------
		ELSEIF ::SQL_ERROR_CODE = 10200 THEN
		  V_ERROR_TYPE = 'ERR_DEL';
		---------------- UPDATE 오류----------------
		 ELSEIF ::SQL_ERROR_CODE = 10300 THEN
		  V_ERROR_TYPE = 'ERR_UPD';
		----------------ANONYMOUS 오류----------------
		ELSE
		  V_ERROR_TYPE = 'ERR_UNKNOWN';
		END IF;

		:O_RESULT.insert(('NG', 'ERROR_MSG_CODE', NULL, V_ERROR_TYPE, ::SQL_ERROR_CODE, SUBSTR(::SQL_ERROR_MESSAGE,0,300)));

	END;


	-- Current DTM
	-- SELECT CURRENT_TIMESTAMP INTO v_curr_dtm FROM DUMMY;


	:O_RESULT.insert(('OK', :V_PROC_ID, NULL, 'SUCCESS', NULL, '[OK]-STEP [Procedure Start]'));

	/***********************************************
	VALIDATION
	***********************************************/
	IF (:P_PROC_DATE IS NULL OR :P_PROC_DATE = '') THEN
		-- SIGNAL V_ERR_VALID SET MESSAGE_TEXT = 'P_PROC_DATE value is empty. Please input the value';
		P_PROC_DATE = TO_CHAR(CURRENT_TIMESTAMP, 'YYYYMMDD'); -- Default 현재일자(YYYYMMDD)
	END IF;


	/* ############################## [2024-01-17일자 Table Layout] ##############################
		CREATE COLUMN TABLE "EXPENSE"."MIF_RCV_CM_EMPLOYEE" (
			"EMP_NO" NVARCHAR(10),
			"NAME" NVARCHAR(50),
			"EMAIL" NVARCHAR(50),
			"OFFICE_PHONE" NVARCHAR(50),
			"CELL_PHONE" NVARCHAR(50),
			"SSN" NVARCHAR(50),
			"JIKUI_ID" NVARCHAR(10),
			"ORDER_DATE" NVARCHAR(8),
			"SDATE" NVARCHAR(8),
			"EDATE" NVARCHAR(8),
			"FORMAL_STATUS" NVARCHAR(1),
			"STATUS" NVARCHAR(1),
			"PREV_EMP_NO" NVARCHAR(10),
			"SINBUN_CODE" NVARCHAR(10),
			"SINBUN_NAME" NVARCHAR(50),
			"BIRTHSTS" NVARCHAR(5),
			--[삭제요청] "BIRTHDAY" NVARCHAR(10),
			"C_FLAG" NVARCHAR(1),
			"DONG_NAME" NVARCHAR(200),
			"DORO_NAME" NVARCHAR(2000),
			"EAI_PCS_DTTM" SECONDDATE NOT NULL ,
			"EAI_DATA_SEQ" INTEGER NOT NULL ,
			"EAI_CRUD_CD" NVARCHAR(1),
			"CREATE_TIME" SECONDDATE,
			"CREATE_USER_ID" NVARCHAR(255),
			"CHANGE_TIME" SECONDDATE,
			"CHANGE_USER_ID" NVARCHAR(255),
		PRIMARY KEY INVERTED INDIVIDUAL("EAI_PCS_DTTM",
		"EAI_DATA_SEQ")) UNLOAD PRIORITY 5 AUTO MERGE;


		CREATE COLUMN TABLE "EXPENSE"."MCM_EMPLOYEE" (
			"EMP_NO" NVARCHAR(10) NOT NULL ,
			"NAME" NVARCHAR(50) NOT NULL ,
			"EMAIL" NVARCHAR(100) NOT NULL ,
			"OFFICE_PHONE" NVARCHAR(30),
			"CELL_PHONE" NVARCHAR(30),
			"SSN" NVARCHAR(25),
			"JIKUI_ID" NVARCHAR(10),
			"SDATE" DATE,
			"EDATE" DATE,
			"SINBUN_CODE" NVARCHAR(10),
			"SINBUN_NAME" NVARCHAR(30),
			--[삭제요청] "BIRTHDAY" NVARCHAR(10),
			"BIRTHDAY_TYPE_CODE" NVARCHAR(1),
			"FORMAL_STATUS_CODE" NVARCHAR(1),
			"EMP_STATUS_CODE" NVARCHAR(1),
			"ORDER_DATE" DATE,
			"ORDER_STATUS_CODE" NVARCHAR(1),
			"SYSTEM_DATE" DATE,
			"ADDRESS" NVARCHAR(120),
			"DONG_NAME" NVARCHAR(200),
			"DORO_NAME" NVARCHAR(500),
			"IF_YN" BOOLEAN DEFAULT FALSE NOT NULL ,
			"CREATE_TIME" SECONDDATE,
			"CREATE_USER_ID" NVARCHAR(255),
			"CHANGE_TIME" SECONDDATE,
			"CHANGE_USER_ID" NVARCHAR(255),
		PRIMARY KEY ("EMP_NO")) WITH ASSOCIATIONS(
		JOIN "EXPENSE"."MCM_CODE" AS "BIRTHDAY_TYPE" ON
		birthday_type.code = birthday_type_code
		AND birthday_type.master_code = 'BIRTHDAY_TYPE',
		JOIN "EXPENSE"."MCM_CODE" AS "EMP_STATUS" ON
		emp_status.code = emp_status_code
		AND emp_status.master_code = 'EMP_STATUS',
		JOIN "EXPENSE"."MCM_CODE" AS "FORMAL_STATUS" ON
		formal_status.code = formal_status_code
		AND formal_status.master_code = 'FORMAL_STATUS',
		JOIN "EXPENSE"."MCM_CODE" AS "JIKUI" ON
		jikui.code = jikui_id
		AND jikui.master_code = 'JICKUI',
		JOIN "EXPENSE"."MCM_CODE" AS "ORDER_STATUS" ON
		order_status.code = order_status_code
		AND order_status.master_code = 'ORDER_STATUS',
		JOIN "EXPENSE"."MCM_ORGANIZATION_MAP" AS "ORG" ON
		org.emp_no = emp_no
		AND org.primary_yn = TRUE,
		JOIN "EXPENSE"."MCM_ORGANIZATION_MAP" AS "ORG_MAP" ON
		org_map.emp_no = emp_no,
		JOIN "EXPENSE"."MCM_CODE" AS "SINBUN" ON
		sinbun.code = sinbun_code
		AND sinbun.master_code = 'SINBUN') UNLOAD PRIORITY 5 AUTO MERGE;
	*/

	-- [STEP-1] I/F 등록 대상 추출
	v_src_tbl =
		SELECT
			  EMP_NO
			, NAME
			, EMAIL
			, OFFICE_PHONE
			, CELL_PHONE
			, SSN
			, JIKUI_ID
			, ORDER_DATE
			, SDATE
			, EDATE
			, FORMAL_STATUS
			, STATUS
			, PREV_EMP_NO
			, SINBUN_CODE
			, SINBUN_NAME
			, BIRTHSTS
			--[삭제요청] , BIRTHDAY
			, C_FLAG
			, DONG_NAME
			, DORO_NAME
			, CURRENT_TIMESTAMP AS CURR_DTM
		FROM MIF_RCV_CM_EMPLOYEE
		WHERE TO_CHAR(EAI_PCS_DTTM, 'YYYYMMDD') = :P_PROC_DATE
		-- AND EAI_CRUD_CD IN ('I') -- I/F 등록시 상태값 조건 확인(I,U,D로 등록되는지 확인)
	;

	IF (NOT IS_EMPTY(:v_src_tbl)) THEN
		
		/* 업무Table 전체Delete & Insert 처리로 정의*/

		-- [STEP-1-1] Table Data 전체삭제
		-- TRUNCATE TABLE MCM_EMPLOYEE;
		DELETE FROM MCM_EMPLOYEE;
		
        V_DELETE_CNT = ::ROWCOUNT;
        :O_RESULT.insert(('OK', :V_PROC_ID, NULL, 'SUCCESS', NULL, '[OK] STEP-1-1 [Pass]-[MCM_EMPLOYEE Delete Count =>'||:V_DELETE_CNT||']'));

		-- [STEP-2] 사원정보 IF Data 등록
		MERGE INTO MCM_EMPLOYEE AS TGT
		USING :v_src_tbl AS SRC ON (TGT.EMP_NO = SRC.EMP_NO)
		/*
		WHEN MATCHED THEN
			UPDATE SET
				  TGT.NAME = SRC.NAME
				, TGT.EMAIL = SRC.EMAIL
				, TGT.OFFICE_PHONE = CAST(SRC.OFFICE_PHONE AS NVARCHAR(30))
				, TGT.CELL_PHONE = CAST(SRC.CELL_PHONE AS NVARCHAR(30))
				, TGT.SSN = CAST(SRC.SSN AS NVARCHAR(25))
				, TGT.JIKUI_ID = SRC.JIKUI_ID
				, TGT.SDATE = TO_DATE(SRC.SDATE, 'YYYYMMDD')
				, TGT.EDATE = TO_DATE(SRC.EDATE, 'YYYYMMDD')
				, TGT.SINBUN_CODE = SRC.SINBUN_CODE
				, TGT.SINBUN_NAME = CAST(SRC.SINBUN_NAME AS NVARCHAR(30))
				--[삭제요청] , TGT.BIRTHDAY = SRC.BIRTHDAY
				, TGT.FORMAL_STATUS_CODE = SRC.FORMAL_STATUS
				, TGT.EMP_STATUS_CODE = SRC.STATUS
				, TGT.ORDER_DATE = TO_DATE(SRC.ORDER_DATE, 'YYYYMMDD')
				, TGT.DONG_NAME = SRC.DONG_NAME
				, TGT.DORO_NAME = CAST(SRC.DORO_NAME AS NVARCHAR(500))
				, TGT.CHANGE_TIME = SRC.CURR_DTM
				, TGT.CHANGE_USER_ID = :v_user_id
		*/
		WHEN NOT MATCHED THEN
			INSERT (
				  EMP_NO
				, NAME
				, EMAIL
				, OFFICE_PHONE
				, CELL_PHONE
				, SSN
				, JIKUI_ID
				, SDATE
				, EDATE
				, SINBUN_CODE
				, SINBUN_NAME
				--[삭제요청] , BIRTHDAY
				, BIRTHDAY_TYPE_CODE
				, FORMAL_STATUS_CODE
				, EMP_STATUS_CODE
				, ORDER_DATE
				, ORDER_STATUS_CODE
				, SYSTEM_DATE
				, ADDRESS
				, DONG_NAME
				, DORO_NAME
				, IF_YN
				, CREATE_TIME
				, CREATE_USER_ID
				, CHANGE_TIME
				, CHANGE_USER_ID
			) VALUES (
				  SRC.EMP_NO
				, SRC.NAME
				, SRC.EMAIL
				, CAST(SRC.OFFICE_PHONE AS NVARCHAR(30))
				, CAST(SRC.CELL_PHONE AS NVARCHAR(30))
				, CAST(SRC.SSN AS NVARCHAR(25))
				, SRC.JIKUI_ID
				, TO_DATE(SRC.SDATE, 'YYYYMMDD')
				, TO_DATE(SRC.EDATE, 'YYYYMMDD')
				, SRC.SINBUN_CODE
				, CAST(SRC.SINBUN_NAME AS NVARCHAR(30))
				--[삭제요청] , SRC.BIRTHDAY
				, NULL -- BIRTHDAY_TYPE_CODE
				, SRC.FORMAL_STATUS
				, SRC.STATUS
				, TO_DATE(SRC.ORDER_DATE, 'YYYYMMDD')
				, NULL -- ORDER_STATUS_CODE
				, NULL -- SYSTEM_DATE
				, NULL -- ADDRESS
				, SRC.DONG_NAME
				, CAST(SRC.DORO_NAME AS NVARCHAR(500))
				, FALSE -- IF_YN
				, SRC.CURR_DTM
				, :v_user_id
				, SRC.CURR_DTM
				, :v_user_id
			)
		;

		-- V_INSERT_CNT = RECORD_COUNT( :v_src_tbl );
        V_INSERT_CNT = ::ROWCOUNT;
        :O_RESULT.insert(('OK', :V_PROC_ID, NULL, 'SUCCESS', NULL, '[OK] STEP-2 [Pass]-[MCM_EMPLOYEE Merge Count =>'||:V_INSERT_CNT||']'));

	ELSE
		V_INSERT_CNT = 0;
        :O_RESULT.insert(('OK', :V_PROC_ID, NULL, 'SUCCESS', NULL, '[I/F No Result Data Proc =>'||:V_INSERT_CNT||']'));
	END IF;


	-- [STEP-3] I/F Data 등록 처리결과 등록






	:O_RESULT.delete();
	--LIB:PRINT_LINE('[Procedure Success]');
	:O_RESULT.insert(('OK', :V_PROC_ID, NULL, 'SUCCESS', NULL, '[OK]-Procedure Success... Count => ['||:V_INSERT_CNT||']'));

END;