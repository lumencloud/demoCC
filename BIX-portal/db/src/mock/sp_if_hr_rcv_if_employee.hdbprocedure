/**
* (Procedure) SP_IF_HR_RCV_IF_EMPLOYEE
* * * *
* - 설명 : 사원정보 I/F Data 등록
* - 수행주기 : 일 배치
*/

PROCEDURE SP_IF_HR_RCV_IF_EMPLOYEE (
	IN CUDMX	VARCHAR(1), -- C:insert, U:update, D:delete, M:update_insert, X:delete_insert
    IN JSONData  CLOB                    
)
LANGUAGE SQLSCRIPT SQL SECURITY INVOKER AS
BEGIN
	IF :CUDMX = 'C' THEN				
		INSERT INTO IF_EMPLOYEE (
			EMP_NO, NAME, EMAIL, OFFICE_PHONE, CELL_PHONE, SSN,
			JIKUI_ID, ORDER_DATE, SDATE, EDATE, FORMAL_STATUS,
			STATUS, PREV_EMP_NO, SINBUN_CODE, SINBUN_NAME, BIRTHSTS, BIRTHDAY,
			C_FLAG, DONG_NAME, DORO_NAME, EAI_PCS_DTTM, EAI_DATA_SEQ, EAI_CRUD_CD,
			CREATE_TIME, CREATE_USER_ID, CHANGE_TIME, CHANGE_USER_ID
		) 
		WITH JSONData AS (SELECT :JSONData as JSONData FROM DUMMY) 
	    SELECT
			JT.EMP_NO, JT.NAME, JT.EMAIL, JT.OFFICE_PHONE, JT.CELL_PHONE, NULL AS SSN, --JT.SSN,
			JT.JIKUI_ID, JT.ORDER_DATE, JT.SDATE, JT.EDATE, JT.FORMAL_STATUS,
			JT.STATUS, JT.PREV_EMP_NO, JT.SINBUN_CODE, JT.SINBUN_NAME, JT.BIRTHSTS, NULL AS BIRTHDAY, --JT.BIRTHDAY,
			JT.C_FLAG, JT.DONG_NAME, JT.DORO_NAME, JT.EAI_PCS_DTTM, JT.EAI_DATA_SEQ, JT.EAI_CRUD_CD,
			JT.CREATE_TIME, JT.CREATE_USER_ID, JT.CHANGE_TIME, JT.CHANGE_USER_ID
	    FROM
    		JSON_TABLE (JSONData.JSONData, '$.DATA[*]'
    		COLUMNS	
    			(
					EMP_NO NVARCHAR(10)					PATH '$.EMP_NO',
					NAME NVARCHAR(50)					PATH '$.NAME',
					EMAIL NVARCHAR(50)					PATH '$.EMAIL',
					OFFICE_PHONE NVARCHAR(50)			PATH '$.OFFICE_PHONE',
					CELL_PHONE NVARCHAR(50)				PATH '$.CELL_PHONE',
					SSN NVARCHAR(50)					PATH '$.SSN',
					JIKUI_ID NVARCHAR(10)				PATH '$.JIKUI_ID',
					ORDER_DATE NVARCHAR(8)				PATH '$.ORDER_DATE',
					SDATE NVARCHAR(8)					PATH '$.SDATE',
					EDATE NVARCHAR(8)					PATH '$.EDATE',
					FORMAL_STATUS NVARCHAR(1)			PATH '$.FORMAL_STATUS',
					STATUS NVARCHAR(1)					PATH '$.STATUS',
					PREV_EMP_NO NVARCHAR(10)			PATH '$.PREV_EMP_NO',
					SINBUN_CODE NVARCHAR(10)			PATH '$.SINBUN_CODE',
					SINBUN_NAME NVARCHAR(50)			PATH '$.SINBUN_NAME',
					BIRTHSTS NVARCHAR(5)				PATH '$.BIRTHSTS',
					BIRTHDAY NVARCHAR(10)				PATH '$.BIRTHDAY',
					C_FLAG NVARCHAR(1)					PATH '$.C_FLAG',
					DONG_NAME NVARCHAR(200)				PATH '$.DONG_NAME',
					DORO_NAME NVARCHAR(2000)			PATH '$.DORO_NAME',
					EAI_PCS_DTTM SECONDDATE 			PATH '$.EAI_PCS_DTTM',
					EAI_DATA_SEQ INTEGER 				PATH '$.EAI_DATA_SEQ',
					EAI_CRUD_CD NVARCHAR(1)				PATH '$.EAI_CRUD_CD',
					CREATE_TIME SECONDDATE				PATH '$.CREATE_TIME',
					CREATE_USER_ID NVARCHAR(255)		PATH '$.CREATE_USER_ID',
					CHANGE_TIME SECONDDATE				PATH '$.CHANGE_TIME',
					CHANGE_USER_ID NVARCHAR(255)		PATH '$.CHANGE_USER_ID'    			
    			)
    		) AS JT;
    ELSEIF :CUDMX = 'U' THEN    	
    	MERGE INTO IF_EMPLOYEE S
    	USING
    		(WITH JSONData AS (SELECT :JSONData as JSONData FROM DUMMY) 
    		SELECT
				JT.EMP_NO, JT.NAME, JT.EMAIL, JT.OFFICE_PHONE, JT.CELL_PHONE, NULL AS SSN, --JT.SSN,
				JT.JIKUI_ID, JT.ORDER_DATE, JT.SDATE, JT.EDATE, JT.FORMAL_STATUS,
				JT.STATUS, JT.PREV_EMP_NO, JT.SINBUN_CODE, JT.SINBUN_NAME, JT.BIRTHSTS, NULL AS BIRTHDAY, --JT.BIRTHDAY,
				JT.C_FLAG, JT.DONG_NAME, JT.DORO_NAME, JT.EAI_PCS_DTTM, JT.EAI_DATA_SEQ, JT.EAI_CRUD_CD,
				JT.CREATE_TIME, JT.CREATE_USER_ID, JT.CHANGE_TIME, JT.CHANGE_USER_ID
    		FROM
    			JSON_TABLE (JSONData.JSONData, '$.DATA[*]'
    				COLUMNS
		    			(
							EMP_NO NVARCHAR(10)					PATH '$.EMP_NO',
							NAME NVARCHAR(50)					PATH '$.NAME',
							EMAIL NVARCHAR(50)					PATH '$.EMAIL',
							OFFICE_PHONE NVARCHAR(50)			PATH '$.OFFICE_PHONE',
							CELL_PHONE NVARCHAR(50)				PATH '$.CELL_PHONE',
							SSN NVARCHAR(50)					PATH '$.SSN',
							JIKUI_ID NVARCHAR(10)				PATH '$.JIKUI_ID',
							ORDER_DATE NVARCHAR(8)				PATH '$.ORDER_DATE',
							SDATE NVARCHAR(8)					PATH '$.SDATE',
							EDATE NVARCHAR(8)					PATH '$.EDATE',
							FORMAL_STATUS NVARCHAR(1)			PATH '$.FORMAL_STATUS',
							STATUS NVARCHAR(1)					PATH '$.STATUS',
							PREV_EMP_NO NVARCHAR(10)			PATH '$.PREV_EMP_NO',
							SINBUN_CODE NVARCHAR(10)			PATH '$.SINBUN_CODE',
							SINBUN_NAME NVARCHAR(50)			PATH '$.SINBUN_NAME',
							BIRTHSTS NVARCHAR(5)				PATH '$.BIRTHSTS',
							BIRTHDAY NVARCHAR(10)				PATH '$.BIRTHDAY',
							C_FLAG NVARCHAR(1)					PATH '$.C_FLAG',
							DONG_NAME NVARCHAR(200)				PATH '$.DONG_NAME',
							DORO_NAME NVARCHAR(2000)			PATH '$.DORO_NAME',
							EAI_PCS_DTTM SECONDDATE 			PATH '$.EAI_PCS_DTTM',
							EAI_DATA_SEQ INTEGER 				PATH '$.EAI_DATA_SEQ',
							EAI_CRUD_CD NVARCHAR(1)				PATH '$.EAI_CRUD_CD',
							CREATE_TIME SECONDDATE				PATH '$.CREATE_TIME',
							CREATE_USER_ID NVARCHAR(255)		PATH '$.CREATE_USER_ID',
							CHANGE_TIME SECONDDATE				PATH '$.CHANGE_TIME',
							CHANGE_USER_ID NVARCHAR(255)		PATH '$.CHANGE_USER_ID' 
		    			)
    		) AS JT ) AS T
    	ON
    		(1=1 AND S.EAI_PCS_DTTM = T.EAI_PCS_DTTM AND S.EAI_DATA_SEQ = T.EAI_DATA_SEQ)
    	WHEN MATCHED THEN
    		UPDATE SET
				S.EMP_NO = T.EMP_NO,
				S.NAME = T.NAME,
				S.EMAIL = T.EMAIL,
				S.OFFICE_PHONE = T.OFFICE_PHONE,
				S.CELL_PHONE = T.CELL_PHONE,
				S.SSN = NULL, --T.SSN,
				S.JIKUI_ID = T.JIKUI_ID,
				S.ORDER_DATE = T.ORDER_DATE,
				S.SDATE = T.SDATE,
				S.EDATE = T.EDATE,
				S.FORMAL_STATUS = T.FORMAL_STATUS,
				S.STATUS = T.STATUS,
				S.PREV_EMP_NO = T.PREV_EMP_NO,
				S.SINBUN_CODE = T.SINBUN_CODE,
				S.SINBUN_NAME = T.SINBUN_NAME,
				S.BIRTHSTS = T.BIRTHSTS,
				S.BIRTHDAY = NULL, --T.BIRTHDAY,
				S.C_FLAG = T.C_FLAG,
				S.DONG_NAME = T.DONG_NAME,
				S.DORO_NAME = T.DORO_NAME,
--				S.EAI_PCS_DTTM = T.EAI_PCS_DTTM,
--				S.EAI_DATA_SEQ = T.EAI_DATA_SEQ,
				S.EAI_CRUD_CD = T.EAI_CRUD_CD,
				S.CREATE_TIME = T.CREATE_TIME,
				S.CREATE_USER_ID = T.CREATE_USER_ID,
				S.CHANGE_TIME = T.CHANGE_TIME,
				S.CHANGE_USER_ID = T.CHANGE_USER_ID;
    ELSEIF :CUDMX = 'D' THEN    		
    	MERGE INTO IF_EMPLOYEE S
    	USING
    		(WITH JSONData AS (SELECT :JSONData as JSONData FROM DUMMY) 
    		SELECT
				JT.EMP_NO, JT.NAME, JT.EMAIL, JT.OFFICE_PHONE, JT.CELL_PHONE, NULL AS SSN, --JT.SSN,
				JT.JIKUI_ID, JT.ORDER_DATE, JT.SDATE, JT.EDATE, JT.FORMAL_STATUS,
				JT.STATUS, JT.PREV_EMP_NO, JT.SINBUN_CODE, JT.SINBUN_NAME, JT.BIRTHSTS, NULL AS BIRTHDAY, --JT.BIRTHDAY,
				JT.C_FLAG, JT.DONG_NAME, JT.DORO_NAME, JT.EAI_PCS_DTTM, JT.EAI_DATA_SEQ, JT.EAI_CRUD_CD,
				JT.CREATE_TIME, JT.CREATE_USER_ID, JT.CHANGE_TIME, JT.CHANGE_USER_ID
    		FROM
    			JSON_TABLE (JSONData.JSONData, '$.DATA[*]'
    				COLUMNS
		    			(
							EMP_NO NVARCHAR(10)					PATH '$.EMP_NO',
							NAME NVARCHAR(50)					PATH '$.NAME',
							EMAIL NVARCHAR(50)					PATH '$.EMAIL',
							OFFICE_PHONE NVARCHAR(50)			PATH '$.OFFICE_PHONE',
							CELL_PHONE NVARCHAR(50)				PATH '$.CELL_PHONE',
							SSN NVARCHAR(50)					PATH '$.SSN',
							JIKUI_ID NVARCHAR(10)				PATH '$.JIKUI_ID',
							ORDER_DATE NVARCHAR(8)				PATH '$.ORDER_DATE',
							SDATE NVARCHAR(8)					PATH '$.SDATE',
							EDATE NVARCHAR(8)					PATH '$.EDATE',
							FORMAL_STATUS NVARCHAR(1)			PATH '$.FORMAL_STATUS',
							STATUS NVARCHAR(1)					PATH '$.STATUS',
							PREV_EMP_NO NVARCHAR(10)			PATH '$.PREV_EMP_NO',
							SINBUN_CODE NVARCHAR(10)			PATH '$.SINBUN_CODE',
							SINBUN_NAME NVARCHAR(50)			PATH '$.SINBUN_NAME',
							BIRTHSTS NVARCHAR(5)				PATH '$.BIRTHSTS',
							BIRTHDAY NVARCHAR(10)				PATH '$.BIRTHDAY',
							C_FLAG NVARCHAR(1)					PATH '$.C_FLAG',
							DONG_NAME NVARCHAR(200)				PATH '$.DONG_NAME',
							DORO_NAME NVARCHAR(2000)			PATH '$.DORO_NAME',
							EAI_PCS_DTTM SECONDDATE 			PATH '$.EAI_PCS_DTTM',
							EAI_DATA_SEQ INTEGER 				PATH '$.EAI_DATA_SEQ',
							EAI_CRUD_CD NVARCHAR(1)				PATH '$.EAI_CRUD_CD',
							CREATE_TIME SECONDDATE				PATH '$.CREATE_TIME',
							CREATE_USER_ID NVARCHAR(255)		PATH '$.CREATE_USER_ID',
							CHANGE_TIME SECONDDATE				PATH '$.CHANGE_TIME',
							CHANGE_USER_ID NVARCHAR(255)		PATH '$.CHANGE_USER_ID' 
		    			)
    		) AS JT ) AS T
    	ON
    		(1=1 AND S.EAI_PCS_DTTM = T.EAI_PCS_DTTM AND S.EAI_DATA_SEQ = T.EAI_DATA_SEQ)
    	WHEN MATCHED THEN
    		DELETE ;
    ELSEIF :CUDMX = 'M' THEN    	
    	MERGE INTO IF_EMPLOYEE S
    	USING
    		(WITH JSONData AS (SELECT :JSONData as JSONData FROM DUMMY) 
    		SELECT
				JT.EMP_NO, JT.NAME, JT.EMAIL, JT.OFFICE_PHONE, JT.CELL_PHONE, NULL AS SSN, --JT.SSN,
				JT.JIKUI_ID, JT.ORDER_DATE, JT.SDATE, JT.EDATE, JT.FORMAL_STATUS,
				JT.STATUS, JT.PREV_EMP_NO, JT.SINBUN_CODE, JT.SINBUN_NAME, JT.BIRTHSTS, NULL AS BIRTHDAY, --JT.BIRTHDAY,
				JT.C_FLAG, JT.DONG_NAME, JT.DORO_NAME, JT.EAI_PCS_DTTM, JT.EAI_DATA_SEQ, JT.EAI_CRUD_CD,
				JT.CREATE_TIME, JT.CREATE_USER_ID, JT.CHANGE_TIME, JT.CHANGE_USER_ID
    		FROM
    			JSON_TABLE (JSONData.JSONData, '$.DATA[*]'
    				COLUMNS
		    			(
							EMP_NO NVARCHAR(10)					PATH '$.EMP_NO',
							NAME NVARCHAR(50)					PATH '$.NAME',
							EMAIL NVARCHAR(50)					PATH '$.EMAIL',
							OFFICE_PHONE NVARCHAR(50)			PATH '$.OFFICE_PHONE',
							CELL_PHONE NVARCHAR(50)				PATH '$.CELL_PHONE',
							SSN NVARCHAR(50)					PATH '$.SSN',
							JIKUI_ID NVARCHAR(10)				PATH '$.JIKUI_ID',
							ORDER_DATE NVARCHAR(8)				PATH '$.ORDER_DATE',
							SDATE NVARCHAR(8)					PATH '$.SDATE',
							EDATE NVARCHAR(8)					PATH '$.EDATE',
							FORMAL_STATUS NVARCHAR(1)			PATH '$.FORMAL_STATUS',
							STATUS NVARCHAR(1)					PATH '$.STATUS',
							PREV_EMP_NO NVARCHAR(10)			PATH '$.PREV_EMP_NO',
							SINBUN_CODE NVARCHAR(10)			PATH '$.SINBUN_CODE',
							SINBUN_NAME NVARCHAR(50)			PATH '$.SINBUN_NAME',
							BIRTHSTS NVARCHAR(5)				PATH '$.BIRTHSTS',
							BIRTHDAY NVARCHAR(10)				PATH '$.BIRTHDAY',
							C_FLAG NVARCHAR(1)					PATH '$.C_FLAG',
							DONG_NAME NVARCHAR(200)				PATH '$.DONG_NAME',
							DORO_NAME NVARCHAR(2000)			PATH '$.DORO_NAME',
							EAI_PCS_DTTM SECONDDATE 			PATH '$.EAI_PCS_DTTM',
							EAI_DATA_SEQ INTEGER 				PATH '$.EAI_DATA_SEQ',
							EAI_CRUD_CD NVARCHAR(1)				PATH '$.EAI_CRUD_CD',
							CREATE_TIME SECONDDATE				PATH '$.CREATE_TIME',
							CREATE_USER_ID NVARCHAR(255)		PATH '$.CREATE_USER_ID',
							CHANGE_TIME SECONDDATE				PATH '$.CHANGE_TIME',
							CHANGE_USER_ID NVARCHAR(255)		PATH '$.CHANGE_USER_ID' 
		    			)
    		) AS JT ) AS T
    	ON
    		(1=1 AND S.EAI_PCS_DTTM = T.EAI_PCS_DTTM AND S.EAI_DATA_SEQ = T.EAI_DATA_SEQ)
    	WHEN MATCHED THEN
    		UPDATE SET
				S.EMP_NO = T.EMP_NO,
				S.NAME = T.NAME,
				S.EMAIL = T.EMAIL,
				S.OFFICE_PHONE = T.OFFICE_PHONE,
				S.CELL_PHONE = T.CELL_PHONE,
				S.SSN = NULL, --T.SSN,
				S.JIKUI_ID = T.JIKUI_ID,
				S.ORDER_DATE = T.ORDER_DATE,
				S.SDATE = T.SDATE,
				S.EDATE = T.EDATE,
				S.FORMAL_STATUS = T.FORMAL_STATUS,
				S.STATUS = T.STATUS,
				S.PREV_EMP_NO = T.PREV_EMP_NO,
				S.SINBUN_CODE = T.SINBUN_CODE,
				S.SINBUN_NAME = T.SINBUN_NAME,
				S.BIRTHSTS = T.BIRTHSTS,
				S.BIRTHDAY = T.BIRTHDAY,
				S.C_FLAG = T.C_FLAG,
				S.DONG_NAME = T.DONG_NAME,
				S.DORO_NAME = T.DORO_NAME,
--				S.EAI_PCS_DTTM = T.EAI_PCS_DTTM,
--				S.EAI_DATA_SEQ = T.EAI_DATA_SEQ,
				S.EAI_CRUD_CD = T.EAI_CRUD_CD,
				S.CREATE_TIME = T.CREATE_TIME,
				S.CREATE_USER_ID = T.CREATE_USER_ID,
				S.CHANGE_TIME = T.CHANGE_TIME,
				S.CHANGE_USER_ID = T.CHANGE_USER_ID
    	WHEN NOT MATCHED THEN    	
			INSERT (
				EMP_NO, NAME, EMAIL, OFFICE_PHONE, CELL_PHONE, SSN,
				JIKUI_ID, ORDER_DATE, SDATE, EDATE, FORMAL_STATUS,
				STATUS, PREV_EMP_NO, SINBUN_CODE, SINBUN_NAME, BIRTHSTS, BIRTHDAY,
				C_FLAG, DONG_NAME, DORO_NAME, EAI_PCS_DTTM, EAI_DATA_SEQ, EAI_CRUD_CD,
				CREATE_TIME, CREATE_USER_ID, CHANGE_TIME, CHANGE_USER_ID
			)
			VALUES (
				T.EMP_NO, T.NAME, T.EMAIL, T.OFFICE_PHONE, T.CELL_PHONE, T.SSN,
				T.JIKUI_ID, T.ORDER_DATE, T.SDATE, T.EDATE, T.FORMAL_STATUS,
				T.STATUS, T.PREV_EMP_NO, T.SINBUN_CODE, T.SINBUN_NAME, T.BIRTHSTS, T.BIRTHDAY,
				T.C_FLAG, T.DONG_NAME, T.DORO_NAME, T.EAI_PCS_DTTM, T.EAI_DATA_SEQ, T.EAI_CRUD_CD,
				T.CREATE_TIME, T.CREATE_USER_ID, T.CHANGE_TIME, T.CHANGE_USER_ID
			);		
	ELSEIF :CUDMX = 'X' THEN		
		DELETE FROM IF_EMPLOYEE;
		
		INSERT INTO IF_EMPLOYEE (
			EMP_NO, NAME, EMAIL, OFFICE_PHONE, CELL_PHONE, SSN,
			JIKUI_ID, ORDER_DATE, SDATE, EDATE, FORMAL_STATUS,
			STATUS, PREV_EMP_NO, SINBUN_CODE, SINBUN_NAME, BIRTHSTS, BIRTHDAY,
			C_FLAG, DONG_NAME, DORO_NAME, EAI_PCS_DTTM, EAI_DATA_SEQ, EAI_CRUD_CD,
			CREATE_TIME, CREATE_USER_ID, CHANGE_TIME, CHANGE_USER_ID
		) 
	   	WITH JSONData AS (SELECT :JSONData as JSONData FROM DUMMY) 
	    SELECT 
			JT.EMP_NO, JT.NAME, JT.EMAIL, JT.OFFICE_PHONE, JT.CELL_PHONE, NULL AS SSN, --JT.SSN,
			JT.JIKUI_ID, JT.ORDER_DATE, JT.SDATE, JT.EDATE, JT.FORMAL_STATUS,
			JT.STATUS, JT.PREV_EMP_NO, JT.SINBUN_CODE, JT.SINBUN_NAME, JT.BIRTHSTS, NULL AS BIRTHDAY, --JT.BIRTHDAY,
			JT.C_FLAG, JT.DONG_NAME, JT.DORO_NAME, JT.EAI_PCS_DTTM, JT.EAI_DATA_SEQ, JT.EAI_CRUD_CD,
			JT.CREATE_TIME, JT.CREATE_USER_ID, JT.CHANGE_TIME, JT.CHANGE_USER_ID
	    FROM
    		JSON_TABLE (JSONData.JSONData, '$.DATA[*]'
    		COLUMNS
    			(
					EMP_NO NVARCHAR(10)					PATH '$.EMP_NO',
					NAME NVARCHAR(50)					PATH '$.NAME',
					EMAIL NVARCHAR(50)					PATH '$.EMAIL',
					OFFICE_PHONE NVARCHAR(50)			PATH '$.OFFICE_PHONE',
					CELL_PHONE NVARCHAR(50)				PATH '$.CELL_PHONE',
					SSN NVARCHAR(50)					PATH '$.SSN',
					JIKUI_ID NVARCHAR(10)				PATH '$.JIKUI_ID',
					ORDER_DATE NVARCHAR(8)				PATH '$.ORDER_DATE',
					SDATE NVARCHAR(8)					PATH '$.SDATE',
					EDATE NVARCHAR(8)					PATH '$.EDATE',
					FORMAL_STATUS NVARCHAR(1)			PATH '$.FORMAL_STATUS',
					STATUS NVARCHAR(1)					PATH '$.STATUS',
					PREV_EMP_NO NVARCHAR(10)			PATH '$.PREV_EMP_NO',
					SINBUN_CODE NVARCHAR(10)			PATH '$.SINBUN_CODE',
					SINBUN_NAME NVARCHAR(50)			PATH '$.SINBUN_NAME',
					BIRTHSTS NVARCHAR(5)				PATH '$.BIRTHSTS',
					BIRTHDAY NVARCHAR(10)				PATH '$.BIRTHDAY',
					C_FLAG NVARCHAR(1)					PATH '$.C_FLAG',
					DONG_NAME NVARCHAR(200)				PATH '$.DONG_NAME',
					DORO_NAME NVARCHAR(2000)			PATH '$.DORO_NAME',
					EAI_PCS_DTTM SECONDDATE 			PATH '$.EAI_PCS_DTTM',
					EAI_DATA_SEQ INTEGER 				PATH '$.EAI_DATA_SEQ',
					EAI_CRUD_CD NVARCHAR(1)				PATH '$.EAI_CRUD_CD',
					CREATE_TIME SECONDDATE				PATH '$.CREATE_TIME',
					CREATE_USER_ID NVARCHAR(255)		PATH '$.CREATE_USER_ID',
					CHANGE_TIME SECONDDATE				PATH '$.CHANGE_TIME',
					CHANGE_USER_ID NVARCHAR(255)		PATH '$.CHANGE_USER_ID' 
    			)
    		) AS JT;	
	END IF;
END;