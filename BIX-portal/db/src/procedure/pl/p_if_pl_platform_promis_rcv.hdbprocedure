/**
* PL_PLATFORM 수신 프로시져
*/

PROCEDURE P_IF_PL_PLATFORM_PROMIS_RCV (
	IN VER NVARCHAR(20),
    IN JSONDATA CLOB                    
)
LANGUAGE SQLSCRIPT SQL SECURITY INVOKER AS
BEGIN

    DECLARE V_IF_TABLE NVARCHAR(50) := 'PL_IF_PLATFORM';
	DECLARE V_START_TIME TIMESTAMP DEFAULT CURRENT_TIMESTAMP;
	DECLARE V_INSERT_CNT INTEGER := 0;

	INSERT INTO PL_IF_PLATFORM (
		-- 인터페이스 정보
		VER,
		FLAG,
		-- 인터페이스 테이블 컬럼
		YEAR_MONTH,
		SEQ,
		PRJ_NO,
		PRJ_NM,
		BIZ_OPP_NO,
		CSTCO_CD,
		SALE_CCORG_CD,
		QUOTE_ISSUE_NO,
		QUOTE_TARGET_NO,
		DT_TP,
		TECH_NM,
		BRAND_NM,
		CNVG_BIZ_YN,
		SALE_M1_AMT,
		SALE_M2_AMT,
		SALE_M3_AMT,
		SALE_M4_AMT,
		SALE_M5_AMT,
		SALE_M6_AMT,
		SALE_M7_AMT,
		SALE_M8_AMT,
		SALE_M9_AMT,
		SALE_M10_AMT,
		SALE_M11_AMT,
		SALE_M12_AMT,
		PRJ_PRFM_M1_AMT,
		PRJ_PRFM_M2_AMT,
		PRJ_PRFM_M3_AMT,
		PRJ_PRFM_M4_AMT,
		PRJ_PRFM_M5_AMT,
		PRJ_PRFM_M6_AMT,
		PRJ_PRFM_M7_AMT,
		PRJ_PRFM_M8_AMT,
		PRJ_PRFM_M9_AMT,
		PRJ_PRFM_M10_AMT,
		PRJ_PRFM_M11_AMT,
		PRJ_PRFM_M12_AMT,
		EAI_PCS_DTTM,
		EAI_DATA_SEQ,
		EAI_CRUD_CD
	)
	WITH JSON_STRING AS (SELECT :JSONDATA AS INPUT FROM DUMMY)
	SELECT
		-- 인터페이스 정보
		:VER AS VER,
		NULL AS FLAG,
		-- 인터페이스 JSON 데이터 컬럼
		JT.YEAR_MONTH,
		ROW_NUMBER() OVER (PARTITION BY PRJ_NO) AS SEQ,
		JT.PRJ_NO,
		JT.PRJ_NM,
		JT.BIZ_OPP_NO,
		JT.CSTCO_CD,
		JT.SALE_CCORG_CD,
		JT.QUOTE_ISSUE_NO,
		JT.QUOTE_TARGET_NO,
		JT.DT_TP,
		JT.TECH_NM,
		JT.BRAND_NM,
		JT.CNVG_BIZ_YN,
		IFNULL(JT.SALE_M1_AMT,0),
		IFNULL(JT.SALE_M2_AMT,0),
		IFNULL(JT.SALE_M3_AMT,0),
		IFNULL(JT.SALE_M4_AMT,0),
		IFNULL(JT.SALE_M5_AMT,0),
		IFNULL(JT.SALE_M6_AMT,0),
		IFNULL(JT.SALE_M7_AMT,0),
		IFNULL(JT.SALE_M8_AMT,0),
		IFNULL(JT.SALE_M9_AMT,0),
		IFNULL(JT.SALE_M10_AMT,0),
		IFNULL(JT.SALE_M11_AMT,0),
		IFNULL(JT.SALE_M12_AMT,0),
		IFNULL(JT.PRJ_PRFM_M1_AMT,0),
		IFNULL(JT.PRJ_PRFM_M2_AMT,0),
		IFNULL(JT.PRJ_PRFM_M3_AMT,0),
		IFNULL(JT.PRJ_PRFM_M4_AMT,0),
		IFNULL(JT.PRJ_PRFM_M5_AMT,0),
		IFNULL(JT.PRJ_PRFM_M6_AMT,0),
		IFNULL(JT.PRJ_PRFM_M7_AMT,0),
		IFNULL(JT.PRJ_PRFM_M8_AMT,0),
		IFNULL(JT.PRJ_PRFM_M9_AMT,0),
		IFNULL(JT.PRJ_PRFM_M10_AMT,0),
		IFNULL(JT.PRJ_PRFM_M11_AMT,0),
		IFNULL(JT.PRJ_PRFM_M12_AMT,0),
		JT.EAI_PCS_DTTM,
		JT.EAI_DATA_SEQ,
		JT.EAI_CRUD_CD
	FROM
		-- I/F API의 JSON PROPERTY 의 KEY값과 IF 테이블 컬럼명 매핑
		JSON_TABLE (JSON_STRING.INPUT, '$.DATA[*]'
		COLUMNS
			(
				YEAR_MONTH			NVARCHAR(6)     	PATH '$.YEAR_MONTH',
				PRJ_NO				NVARCHAR(20)    	PATH '$.PRJ_NO',
				PRJ_NM				NVARCHAR(300)   	PATH '$.PRJ_NM',
				BIZ_OPP_NO			NVARCHAR(30)    	PATH '$.BIZ_OPP_NO',
				CSTCO_CD			NVARCHAR(20)    	PATH '$.CSTCO_CD',
				SALE_CCORG_CD		NVARCHAR(20)    	PATH '$.SALE_CCORG_CD',
				QUOTE_ISSUE_NO		NVARCHAR(20)    	PATH '$.QUOTE_ISSUE_NO',
				QUOTE_TARGET_NO		NVARCHAR(20)    	PATH '$.QUOTE_TARGET_NO',
				DT_TP				NVARCHAR(20)    	PATH '$.DT_TP',
				TECH_NM				NVARCHAR(40)    	PATH '$.TECH_NM',
				BRAND_NM			NVARCHAR(40)    	PATH '$.BRAND_NM',
				CNVG_BIZ_YN			NVARCHAR(1)     	PATH '$.CNVG_BIZ_YN',
				SALE_M1_AMT			DECIMAL				PATH '$.SALE_M1_AMT',
				SALE_M2_AMT			DECIMAL				PATH '$.SALE_M2_AMT',
				SALE_M3_AMT			DECIMAL				PATH '$.SALE_M3_AMT',
				SALE_M4_AMT			DECIMAL				PATH '$.SALE_M4_AMT',
				SALE_M5_AMT			DECIMAL				PATH '$.SALE_M5_AMT',
				SALE_M6_AMT			DECIMAL				PATH '$.SALE_M6_AMT',
				SALE_M7_AMT			DECIMAL				PATH '$.SALE_M7_AMT',
				SALE_M8_AMT			DECIMAL				PATH '$.SALE_M8_AMT',
				SALE_M9_AMT			DECIMAL				PATH '$.SALE_M9_AMT',
				SALE_M10_AMT		DECIMAL				PATH '$.SALE_M10_AMT',
				SALE_M11_AMT		DECIMAL				PATH '$.SALE_M11_AMT',
				SALE_M12_AMT		DECIMAL				PATH '$.SALE_M12_AMT',
				PRJ_PRFM_M1_AMT		DECIMAL				PATH '$.PRJ_PRFM_M1_AMT',
				PRJ_PRFM_M2_AMT		DECIMAL				PATH '$.PRJ_PRFM_M2_AMT',
				PRJ_PRFM_M3_AMT		DECIMAL				PATH '$.PRJ_PRFM_M3_AMT',
				PRJ_PRFM_M4_AMT		DECIMAL				PATH '$.PRJ_PRFM_M4_AMT',
				PRJ_PRFM_M5_AMT		DECIMAL				PATH '$.PRJ_PRFM_M5_AMT',
				PRJ_PRFM_M6_AMT		DECIMAL				PATH '$.PRJ_PRFM_M6_AMT',
				PRJ_PRFM_M7_AMT		DECIMAL				PATH '$.PRJ_PRFM_M7_AMT',
				PRJ_PRFM_M8_AMT		DECIMAL				PATH '$.PRJ_PRFM_M8_AMT',
				PRJ_PRFM_M9_AMT		DECIMAL				PATH '$.PRJ_PRFM_M9_AMT',
				PRJ_PRFM_M10_AMT	DECIMAL				PATH '$.PRJ_PRFM_M10_AMT',
				PRJ_PRFM_M11_AMT	DECIMAL				PATH '$.PRJ_PRFM_M11_AMT',
				PRJ_PRFM_M12_AMT	DECIMAL				PATH '$.PRJ_PRFM_M12_AMT',
				EAI_PCS_DTTM 		SECONDDATE 			PATH '$.EAI_PCS_DTTM',			--EAI I/F 처리시간
				EAI_DATA_SEQ 		INTEGER 			PATH '$.EAI_DATA_SEQ',			--EAI 시퀀스
				EAI_CRUD_CD 		NVARCHAR(1)			PATH '$.EAI_CRUD_CD'			--EAI 처리 코드					--통제 여부
			)
		) AS JT;

	V_INSERT_CNT = ::ROWCOUNT;

	INSERT INTO COMMON_INTERFACE_LOG
	(VER, UUID, CREATEDAT, IF_STEP, SOURCE, TABLE_NAME, PROCEDURE_NAME, EXECUTE_TIME, ROW_COUNT, SUCCESS_YN, ERR_CD, LOG)
	VALUES
	(:VER, SYSUUID, CURRENT_TIMESTAMP, 'RCV', 'PROMIS', :V_IF_TABLE, ::CURRENT_OBJECT_NAME, ROUND(SECONDS_BETWEEN(CURRENT_TIMESTAMP, :V_START_TIME) * 1000,0), :V_INSERT_CNT, true, null, null);

END;