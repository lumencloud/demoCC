/**
* PROJECT 정보 I/F TABLE -> BIX TABLE TRANSFER
*
* > O_RESULT : 로그 저장
*/
PROCEDURE P_IF_PL_SFDC_PIPELINE_TRSF (
	IN VER NVARCHAR(20),
	OUT O_RESULT TABLE (
		RESULT_CODE NVARCHAR(30)
		, VER NVARCHAR(20)
		, SQL_ERROR_CODE NVARCHAR(30)
		, SQL_ERROR_MESSAGE NVARCHAR(500)
	)
)
LANGUAGE SQLSCRIPT
SQL SECURITY INVOKER
AS
BEGIN
USING SQLSCRIPT_PRINT AS LIB;

	DECLARE V_USER_NAME NVARCHAR(10) = 'IF_SYS';
	DECLARE V_START_TIME TIMESTAMP DEFAULT CURRENT_TIMESTAMP;
	DECLARE V_IF_TABLE NVARCHAR(50) DEFAULT 'PL_IF_SFDC';
	DECLARE V_INSERT_CNT INTEGER = 0;
	DECLARE V_DUMMY INTEGER;

	/* SQL ERROR 처리 */
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		ROLLBACK;

		:O_RESULT.INSERT(('NG', :VER, ::SQL_ERROR_CODE, SUBSTR(::SQL_ERROR_MESSAGE,0,500)));

		INSERT INTO COMMON_INTERFACE_LOG
		(VER, UUID, CREATEDAT, IF_STEP, SOURCE, TABLE_NAME, PROCEDURE_NAME, EXECUTE_TIME, ROW_COUNT, SUCCESS_YN, ERR_CD, LOG)
		VALUES
		(:VER, SYSUUID, CURRENT_TIMESTAMP, 'TRSF', 'PL_IF_SFDC', :V_IF_TABLE, ::CURRENT_OBJECT_NAME, NULL, NULL, false, ::SQL_ERROR_CODE, SUBSTR(::SQL_ERROR_MESSAGE,0,500));

	END;

	/***********************************************
	VALIDATION
	***********************************************/

	:O_RESULT.INSERT(('OK', :VER, NULL, '[OK]-STEP [PROCEDURE START]'));

	-- [STEP-1] I/F 테이블 확인 (해당 버전 데이터가 IF 테이블에 존재하는지 체크)
	
	SELECT 1
	INTO V_DUMMY
	FROM PL_IF_SFDC
	WHERE VER = :VER
	-- AND FLAG IS NULL	-- FLAG 사용 의미가 없어짐, 우선 생략 추후 제거 or 로직 정리
	LIMIT 1
	;
		
	-- [STEP-2] IF DATA 등록

	-- PL_SFDC_CONTRACT

	V_START_TIME = CURRENT_TIMESTAMP;
	V_IF_TABLE = 'PL_SFDC_CONTRACT';

	INSERT INTO PL_SFDC_CONTRACT (
		CREATEDAT,
		CREATEDBY,
		MODIFIEDAT,
		MODIFIEDBY,
		VER,
		ID,
		YEAR,
		MONTH,
		PRJ_NO_SFDC,
		PRJ_NO,
		PRJ_PRFM_STR_DT,
		PRJ_PRFM_END_DT,
		PRJ_TP_CD,
		PRJ_TP_NM,
		BIZ_OPP_NO_SFDC,
		BIZ_OPP_NO,
		BIZ_OPP_NM,
		DEAL_STAGE_CD,
		DEAL_STAGE_CHG_DT,
		CSTCO_CD,
		CSTCO_NAME,
		RODR_CCORG_CD,
		SALE_CCORG_CD,
		DGTR_TASK_CD,
		BIZ_TP_ACCOUNT_CD,
		CLS_RSN_TP_CD,
		CLS_RSN_TP_NM,
		EXPECTED_CONTRACT_DATE,
		MARGIN_RATE,
		BD_N2_CD,
		RELSCO_YN,
		RODR_M1_AMT,
		RODR_M2_AMT,
		RODR_M3_AMT,
		RODR_M4_AMT,
		RODR_M5_AMT,
		RODR_M6_AMT,
		RODR_M7_AMT,
		RODR_M8_AMT,
		RODR_M9_AMT,
		RODR_M10_AMT,
		RODR_M11_AMT,
		RODR_M12_AMT,
		SALE_M1_AMT,
		SALE_M2_AMT,
		SALE_M3_AMT,
		SALE_M4_AMT,
		SALE_M5_AMT,
		SALE_M6_AMT,
		SALE_M7_AMT,
		SALE_M8_AMT,
		SALE_M9_AMT,
		SALE_M10_AMT,
		SALE_M11_AMT,
		SALE_M12_AMT,
		PRJ_PRFM_M1_AMT,
		PRJ_PRFM_M2_AMT,
		PRJ_PRFM_M3_AMT,
		PRJ_PRFM_M4_AMT,
		PRJ_PRFM_M5_AMT,
		PRJ_PRFM_M6_AMT,
		PRJ_PRFM_M7_AMT,
		PRJ_PRFM_M8_AMT,
		PRJ_PRFM_M9_AMT,
		PRJ_PRFM_M10_AMT,
		PRJ_PRFM_M11_AMT,
		PRJ_PRFM_M12_AMT,
		MARGIN_M1_AMT,
		MARGIN_M2_AMT,
		MARGIN_M3_AMT,
		MARGIN_M4_AMT,
		MARGIN_M5_AMT,
		MARGIN_M6_AMT,
		MARGIN_M7_AMT,
		MARGIN_M8_AMT,
		MARGIN_M9_AMT,
		MARGIN_M10_AMT,
		MARGIN_M11_AMT,
		MARGIN_M12_AMT
	)
	WITH IF_DATA AS (
		SELECT
			SFDC.VER,
			SFDC.YEAR,
			SUBSTRING(SFDC.VER,6,2) AS MONTH,
			SFDC.ID,	-- SFDC 데이터ID
			SFDC.PRJ_NO_SFDC,
			SFDC.PRJ_NO,
			SFDC.PRJ_PRFM_STR_DT,
			SFDC.PRJ_PRFM_END_DT,
			TP.VALUE AS PRJ_TP_CD,
			SFDC.PRJ_TP_NM,
			SFDC.BIZ_OPP_NO_SFDC,
			SFDC.BIZ_OPP_NO,
			SFDC.BIZ_OPP_NM,
			SFDC.DEAL_STAGE_CD,
			SFDC.DEAL_STAGE_CHG_DT,
			SFDC.CSTCO_CD,
			SFDC.CSTCO_NAME,
			SFDC.RODR_CCORG_CD,
			SFDC.SALE_CCORG_CD,
			SFDC.DGTR_TASK_CD,
			SFDC.BIZ_TP_ACCOUNT_CD,
			SFDC.CLS_RSN_TP_CD,
			SFDC.CLS_RSN_TP_NM,
			SFDC.EXPECTED_CONTRACT_DATE,
			SFDC.MARGIN_RATE,
			SFDC.BD_N2_CD,
			SFDC.RELSCO_YN,
			IFNULL(SFDC.PRJ_TARGET_M1_AMT,0) AS RODR_M1_AMT,
			IFNULL(SFDC.PRJ_TARGET_M2_AMT,0) AS RODR_M2_AMT,
			IFNULL(SFDC.PRJ_TARGET_M3_AMT,0) AS RODR_M3_AMT,
			IFNULL(SFDC.PRJ_TARGET_M4_AMT,0) AS RODR_M4_AMT,
			IFNULL(SFDC.PRJ_TARGET_M5_AMT,0) AS RODR_M5_AMT,
			IFNULL(SFDC.PRJ_TARGET_M6_AMT,0) AS RODR_M6_AMT,
			IFNULL(SFDC.PRJ_TARGET_M7_AMT,0) AS RODR_M7_AMT,
			IFNULL(SFDC.PRJ_TARGET_M8_AMT,0) AS RODR_M8_AMT,
			IFNULL(SFDC.PRJ_TARGET_M9_AMT,0) AS RODR_M9_AMT,
			IFNULL(SFDC.PRJ_TARGET_M10_AMT,0) AS RODR_M10_AMT,
			IFNULL(SFDC.PRJ_TARGET_M11_AMT,0) AS RODR_M11_AMT,
			IFNULL(SFDC.PRJ_TARGET_M12_AMT,0) AS RODR_M12_AMT,
			IFNULL(SFDC.SALE_M1_AMT,0) AS SALE_M1_AMT,
			IFNULL(SFDC.SALE_M2_AMT,0) AS SALE_M2_AMT,
			IFNULL(SFDC.SALE_M3_AMT,0) AS SALE_M3_AMT,
			IFNULL(SFDC.SALE_M4_AMT,0) AS SALE_M4_AMT,
			IFNULL(SFDC.SALE_M5_AMT,0) AS SALE_M5_AMT,
			IFNULL(SFDC.SALE_M6_AMT,0) AS SALE_M6_AMT,
			IFNULL(SFDC.SALE_M7_AMT,0) AS SALE_M7_AMT,
			IFNULL(SFDC.SALE_M8_AMT,0) AS SALE_M8_AMT,
			IFNULL(SFDC.SALE_M9_AMT,0) AS SALE_M9_AMT,
			IFNULL(SFDC.SALE_M10_AMT,0) AS SALE_M10_AMT,
			IFNULL(SFDC.SALE_M11_AMT,0) AS SALE_M11_AMT,
			IFNULL(SFDC.SALE_M12_AMT,0) AS SALE_M12_AMT,
			IFNULL(SFDC.PRJ_COST_M1_AMT,0)	AS PRJ_PRFM_M1_AMT,
			IFNULL(SFDC.PRJ_COST_M2_AMT,0)	AS PRJ_PRFM_M2_AMT,
			IFNULL(SFDC.PRJ_COST_M3_AMT,0)	AS PRJ_PRFM_M3_AMT,
			IFNULL(SFDC.PRJ_COST_M4_AMT,0)	AS PRJ_PRFM_M4_AMT,
			IFNULL(SFDC.PRJ_COST_M5_AMT,0)	AS PRJ_PRFM_M5_AMT,
			IFNULL(SFDC.PRJ_COST_M6_AMT,0)	AS PRJ_PRFM_M6_AMT,
			IFNULL(SFDC.PRJ_COST_M7_AMT,0)	AS PRJ_PRFM_M7_AMT,
			IFNULL(SFDC.PRJ_COST_M8_AMT,0)	AS PRJ_PRFM_M8_AMT,
			IFNULL(SFDC.PRJ_COST_M9_AMT,0)	AS PRJ_PRFM_M9_AMT,
			IFNULL(SFDC.PRJ_COST_M10_AMT,0) AS PRJ_PRFM_M10_AMT,
			IFNULL(SFDC.PRJ_COST_M11_AMT,0) AS PRJ_PRFM_M11_AMT,
			IFNULL(SFDC.PRJ_COST_M12_AMT,0) AS PRJ_PRFM_M12_AMT,
			IFNULL(SFDC.SALE_M1_AMT,0) - IFNULL(SFDC.PRJ_COST_M1_AMT,0) AS MARGIN_M1_AMT,
			IFNULL(SFDC.SALE_M2_AMT,0) - IFNULL(SFDC.PRJ_COST_M2_AMT,0) AS MARGIN_M2_AMT,
			IFNULL(SFDC.SALE_M3_AMT,0) - IFNULL(SFDC.PRJ_COST_M3_AMT,0) AS MARGIN_M3_AMT,
			IFNULL(SFDC.SALE_M4_AMT,0) - IFNULL(SFDC.PRJ_COST_M4_AMT,0) AS MARGIN_M4_AMT,
			IFNULL(SFDC.SALE_M5_AMT,0) - IFNULL(SFDC.PRJ_COST_M5_AMT,0) AS MARGIN_M5_AMT,
			IFNULL(SFDC.SALE_M6_AMT,0) - IFNULL(SFDC.PRJ_COST_M6_AMT,0) AS MARGIN_M6_AMT,
			IFNULL(SFDC.SALE_M7_AMT,0) - IFNULL(SFDC.PRJ_COST_M7_AMT,0) AS MARGIN_M7_AMT,
			IFNULL(SFDC.SALE_M8_AMT,0) - IFNULL(SFDC.PRJ_COST_M8_AMT,0) AS MARGIN_M8_AMT,
			IFNULL(SFDC.SALE_M9_AMT,0) - IFNULL(SFDC.PRJ_COST_M9_AMT,0) AS MARGIN_M9_AMT,
			IFNULL(SFDC.SALE_M10_AMT,0) - IFNULL(SFDC.PRJ_COST_M10_AMT,0) AS MARGIN_M10_AMT,
			IFNULL(SFDC.SALE_M11_AMT,0) - IFNULL(SFDC.PRJ_COST_M11_AMT,0) AS MARGIN_M11_AMT,
			IFNULL(SFDC.SALE_M12_AMT,0) - IFNULL(SFDC.PRJ_COST_M12_AMT,0) AS MARGIN_M12_AMT
		FROM PL_IF_SFDC AS SFDC
		LEFT JOIN COMMON_CODE_ITEM AS TP
		ON UPPER(REPLACE(SFDC.PRJ_TP_NM,' ','')) = UPPER(REPLACE(TP.NAME,' ',''))
		AND TP.HEADER_ID = (
			SELECT ID FROM COMMON_CODE_HEADER WHERE UPPER(CATEGORY) = 'PROJECT_TYPE' LIMIT 1
		)
		WHERE VER = :VER
		-- AND FLAG IS NULL	-- FLAG 사용 의미가 없어짐, 우선 생략 추후 제거 or 로직 정리
		-- AND DEAL_STAGE_CD = 'Contracted'
	)
	SELECT
		:V_START_TIME,
		:V_USER_NAME,
		:V_START_TIME,
		:V_USER_NAME,
		VER,
		ID,
		YEAR,
		MONTH,
		CASE	-- Deselected 상태의 project 정보가 존재하지 않으면 저장시 SFDC id 사용
			WHEN PRJ_NO_SFDC = '' OR PRJ_NO_SFDC IS NULL THEN ID
			ELSE PRJ_NO_SFDC
		END AS PRJ_NO_SFDC,
		PRJ_NO,
		PRJ_PRFM_STR_DT,
		PRJ_PRFM_END_DT,
		PRJ_TP_CD,
		PRJ_TP_NM,
		BIZ_OPP_NO_SFDC,
		BIZ_OPP_NO,
		BIZ_OPP_NM,
		DEAL_STAGE_CD,
		DEAL_STAGE_CHG_DT,
		CSTCO_CD,
		CSTCO_NAME,
		RODR_CCORG_CD,
		SALE_CCORG_CD,
		DGTR_TASK_CD,
		BIZ_TP_ACCOUNT_CD,
		CLS_RSN_TP_CD,
		CLS_RSN_TP_NM,
		EXPECTED_CONTRACT_DATE,
		MARGIN_RATE,
		BD_N2_CD,
		RELSCO_YN,
		RODR_M1_AMT,
		RODR_M2_AMT,
		RODR_M3_AMT,
		RODR_M4_AMT,
		RODR_M5_AMT,
		RODR_M6_AMT,
		RODR_M7_AMT,
		RODR_M8_AMT,
		RODR_M9_AMT,
		RODR_M10_AMT,
		RODR_M11_AMT,
		RODR_M12_AMT,
		SALE_M1_AMT,
		SALE_M2_AMT,
		SALE_M3_AMT,
		SALE_M4_AMT,
		SALE_M5_AMT,
		SALE_M6_AMT,
		SALE_M7_AMT,
		SALE_M8_AMT,
		SALE_M9_AMT,
		SALE_M10_AMT,
		SALE_M11_AMT,
		SALE_M12_AMT,
		PRJ_PRFM_M1_AMT,
		PRJ_PRFM_M2_AMT,
		PRJ_PRFM_M3_AMT,
		PRJ_PRFM_M4_AMT,
		PRJ_PRFM_M5_AMT,
		PRJ_PRFM_M6_AMT,
		PRJ_PRFM_M7_AMT,
		PRJ_PRFM_M8_AMT,
		PRJ_PRFM_M9_AMT,
		PRJ_PRFM_M10_AMT,
		PRJ_PRFM_M11_AMT,
		PRJ_PRFM_M12_AMT,
		MARGIN_M1_AMT,
		MARGIN_M2_AMT,
		MARGIN_M3_AMT,
		MARGIN_M4_AMT,
		MARGIN_M5_AMT,
		MARGIN_M6_AMT,
		MARGIN_M7_AMT,
		MARGIN_M8_AMT,
		MARGIN_M9_AMT,
		MARGIN_M10_AMT,
		MARGIN_M11_AMT,
		MARGIN_M12_AMT
	FROM IF_DATA;

	V_INSERT_CNT = ::ROWCOUNT;
	:O_RESULT.INSERT(('OK', :VER, NULL, '[OK] STEP-2 [PASS]-['||:V_IF_TABLE||' INSERT COUNT =>'||:V_INSERT_CNT||']'));

	INSERT INTO COMMON_INTERFACE_LOG
	(VER, UUID, CREATEDAT, IF_STEP, SOURCE, TABLE_NAME, PROCEDURE_NAME, EXECUTE_TIME, ROW_COUNT, SUCCESS_YN, ERR_CD, LOG)
	VALUES
	(:VER, SYSUUID, CURRENT_TIMESTAMP, 'TRSF', 'PL_IF_SFDC', :V_IF_TABLE, ::CURRENT_OBJECT_NAME, ROUND(SECONDS_BETWEEN(CURRENT_TIMESTAMP, :V_START_TIME) * 1000,0), :V_INSERT_CNT, true, null, null);	
	
	UPDATE PL_IF_SFDC
	SET FLAG = 'S'
	WHERE FLAG IS NULL
	AND VER = :VER;

	-- [STEP-3] I/F DATA 등록 처리결과
	:O_RESULT.INSERT(('OK', :VER, NULL, '[OK]-PROCEDURE SUCCESS... COUNT => ['||:V_INSERT_CNT||']'));
				
END;