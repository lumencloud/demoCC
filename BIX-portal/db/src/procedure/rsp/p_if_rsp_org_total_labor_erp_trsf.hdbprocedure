/**
* PROJECT 정보 I/F TABLE -> BIX TABLE TRANSFER
*
* > O_RESULT : 로그 저장
*/
PROCEDURE P_IF_RSP_ORG_TOTAL_LABOR_ERP_TRSF (
	IN VER NVARCHAR(20),
	OUT O_RESULT TABLE (
		RESULT_CODE NVARCHAR(30)
		, VER NVARCHAR(20)
		, SQL_ERROR_CODE NVARCHAR(30)
		, SQL_ERROR_MESSAGE NVARCHAR(500)
	)
)
LANGUAGE SQLSCRIPT
SQL SECURITY INVOKER
AS
BEGIN
USING SQLSCRIPT_PRINT AS LIB;

	DECLARE V_USER_NAME NVARCHAR(10) = 'IF_SYS';
	DECLARE V_START_TIME TIMESTAMP DEFAULT CURRENT_TIMESTAMP;
	DECLARE V_IF_TABLE NVARCHAR(50) DEFAULT 'RSP_IF_ORG_TOTAL_LABOR';
	DECLARE V_INSERT_CNT INTEGER = 0;
	DECLARE V_DUMMY INTEGER;

	/* SQL ERROR 처리 */
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		ROLLBACK;

		:O_RESULT.INSERT(('NG', :VER, ::SQL_ERROR_CODE, SUBSTR(::SQL_ERROR_MESSAGE,0,500)));

		INSERT INTO COMMON_INTERFACE_LOG
		(VER, UUID, CREATEDAT, IF_STEP, SOURCE, TABLE_NAME, PROCEDURE_NAME, EXECUTE_TIME, ROW_COUNT, SUCCESS_YN, ERR_CD, LOG)
		VALUES
		(:VER, SYSUUID, CURRENT_TIMESTAMP, 'TRSF', 'RSP_IF_ORG_TOTAL_LABOR', :V_IF_TABLE, ::CURRENT_OBJECT_NAME, NULL, NULL, false, ::SQL_ERROR_CODE, SUBSTR(::SQL_ERROR_MESSAGE,0,500));	

	END;

	/***********************************************
	VALIDATION
	***********************************************/

	:O_RESULT.INSERT(('OK', :VER, NULL, '[OK]-STEP [PROCEDURE START]'));

	-- [STEP-1] I/F 테이블 확인 (해당 버전 데이터가 IF 테이블에 존재하는지 체크)
	
	SELECT 1
	INTO V_DUMMY
	FROM RSP_IF_ORG_TOTAL_LABOR
	WHERE VER = :VER
	-- AND FLAG IS NULL	-- FLAG 사용 의미가 없어짐, 우선 생략 추후 제거 or 로직 정리
	LIMIT 1
	;
		
	-- [STEP-2] IF DATA 등록
	V_START_TIME = CURRENT_TIMESTAMP;
	V_IF_TABLE = 'RSP_ORG_TOTAL_LABOR';

	INSERT INTO RSP_ORG_TOTAL_LABOR (
		CREATEDAT,
		CREATEDBY,
		MODIFIEDAT,
		MODIFIEDBY,
		VER,
		YEAR,
		MONTH,
		CCORG_CD,
		TOTAL_M1_AMT,
		TOTAL_M2_AMT,
		TOTAL_M3_AMT,
		TOTAL_M4_AMT,
		TOTAL_M5_AMT,
		TOTAL_M6_AMT,
		TOTAL_M7_AMT,
		TOTAL_M8_AMT,
		TOTAL_M9_AMT,
		TOTAL_M10_AMT,
		TOTAL_M11_AMT,
		TOTAL_M12_AMT,
		TOTAL_M1_EMP,
		TOTAL_M2_EMP,
		TOTAL_M3_EMP,
		TOTAL_M4_EMP,
		TOTAL_M5_EMP,
		TOTAL_M6_EMP,
		TOTAL_M7_EMP,
		TOTAL_M8_EMP,
		TOTAL_M9_EMP,
		TOTAL_M10_EMP,
		TOTAL_M11_EMP,
		TOTAL_M12_EMP,
		AVG_M1_AMT,
		AVG_M2_AMT,
		AVG_M3_AMT,
		AVG_M4_AMT,
		AVG_M5_AMT,
		AVG_M6_AMT,
		AVG_M7_AMT,
		AVG_M8_AMT,
		AVG_M9_AMT,
		AVG_M10_AMT,
		AVG_M11_AMT,
		AVG_M12_AMT
	)
	WITH IF_DATA AS (
		SELECT
			VER,
			YEAR,
			LPAD(MONTH,2,'0') AS MONTH,
			CCORG_CD,
			TOTAL_M1_AMT,
			TOTAL_M2_AMT,
			TOTAL_M3_AMT,
			TOTAL_M4_AMT,
			TOTAL_M5_AMT,
			TOTAL_M6_AMT,
			TOTAL_M7_AMT,
			TOTAL_M8_AMT,
			TOTAL_M9_AMT,
			TOTAL_M10_AMT,
			TOTAL_M11_AMT,
			TOTAL_M12_AMT,
			TOTAL_M1_EMP,
			TOTAL_M2_EMP,
			TOTAL_M3_EMP,
			TOTAL_M4_EMP,
			TOTAL_M5_EMP,
			TOTAL_M6_EMP,
			TOTAL_M7_EMP,
			TOTAL_M8_EMP,
			TOTAL_M9_EMP,
			TOTAL_M10_EMP,
			TOTAL_M11_EMP,
			TOTAL_M12_EMP,
			AVG_M1_AMT,
			AVG_M2_AMT,
			AVG_M3_AMT,
			AVG_M4_AMT,
			AVG_M5_AMT,
			AVG_M6_AMT,
			AVG_M7_AMT,
			AVG_M8_AMT,
			AVG_M9_AMT,
			AVG_M10_AMT,
			AVG_M11_AMT,
			AVG_M12_AMT
		FROM RSP_IF_ORG_TOTAL_LABOR
		WHERE VER = :VER
		-- AND FLAG IS NULL	-- FLAG 사용 의미가 없어짐, 우선 생략 추후 제거 or 로직 정리
	)
	SELECT
		:V_START_TIME,
		:V_USER_NAME,
		:V_START_TIME,
		:V_USER_NAME,
		VER,
		YEAR,
		MONTH,
		CCORG_CD,
		IFNULL(TOTAL_M1_AMT,0),
		IFNULL(TOTAL_M2_AMT,0),
		IFNULL(TOTAL_M3_AMT,0),
		IFNULL(TOTAL_M4_AMT,0),
		IFNULL(TOTAL_M5_AMT,0),
		IFNULL(TOTAL_M6_AMT,0),
		IFNULL(TOTAL_M7_AMT,0),
		IFNULL(TOTAL_M8_AMT,0),
		IFNULL(TOTAL_M9_AMT,0),
		IFNULL(TOTAL_M10_AMT,0),
		IFNULL(TOTAL_M11_AMT,0),
		IFNULL(TOTAL_M12_AMT,0),
		IFNULL(TOTAL_M1_EMP,0),
		IFNULL(TOTAL_M2_EMP,0),
		IFNULL(TOTAL_M3_EMP,0),
		IFNULL(TOTAL_M4_EMP,0),
		IFNULL(TOTAL_M5_EMP,0),
		IFNULL(TOTAL_M6_EMP,0),
		IFNULL(TOTAL_M7_EMP,0),
		IFNULL(TOTAL_M8_EMP,0),
		IFNULL(TOTAL_M9_EMP,0),
		IFNULL(TOTAL_M10_EMP,0),
		IFNULL(TOTAL_M11_EMP,0),
		IFNULL(TOTAL_M12_EMP,0),
		IFNULL(AVG_M1_AMT,0),
		IFNULL(AVG_M2_AMT,0),
		IFNULL(AVG_M3_AMT,0),
		IFNULL(AVG_M4_AMT,0),
		IFNULL(AVG_M5_AMT,0),
		IFNULL(AVG_M6_AMT,0),
		IFNULL(AVG_M7_AMT,0),
		IFNULL(AVG_M8_AMT,0),
		IFNULL(AVG_M9_AMT,0),
		IFNULL(AVG_M10_AMT,0),
		IFNULL(AVG_M11_AMT,0),
		IFNULL(AVG_M12_AMT,0)
	FROM IF_DATA;

	V_INSERT_CNT = ::ROWCOUNT;
	:O_RESULT.INSERT(('OK', :VER, NULL, '[OK] STEP-2 [PASS]-['||:V_IF_TABLE||' INSERT COUNT =>'||:V_INSERT_CNT||']'));

	INSERT INTO COMMON_INTERFACE_LOG
	(VER, UUID, CREATEDAT, IF_STEP, SOURCE, TABLE_NAME, PROCEDURE_NAME, EXECUTE_TIME, ROW_COUNT, SUCCESS_YN, ERR_CD, LOG)
	VALUES
	(:VER, SYSUUID, CURRENT_TIMESTAMP, 'TRSF', 'RSP_IF_ORG_TOTAL_LABOR', :V_IF_TABLE, ::CURRENT_OBJECT_NAME, ROUND(SECONDS_BETWEEN(CURRENT_TIMESTAMP, :V_START_TIME) * 1000,0), :V_INSERT_CNT, true, null, null);

	
	-- SGA WIDEVIEW - LABOR 항목 추가
	-- SGA WIDEVIEW 에는 결산월 에서 추정월 (인터페이스 시점 / 데이터 생성월)로 변경
	-- expense , investment 는 추정월로 사용하여, 통일함

	V_START_TIME = CURRENT_TIMESTAMP;
	V_IF_TABLE = 'WIDEVIEW';

	MERGE INTO SGA_WIDEVIEW T
	USING (
		SELECT
			TOTAL.VER,
			TOTAL.YEAR,
			LPAD(TO_VARCHAR(TO_INTEGER(TOTAL.MONTH)),2,'0') AS MONTH,
			TOTAL.CCORG_CD,
			TOTAL_M1_AMT - BILL_M1_AMT AS LABOR_M1_AMT,
			TOTAL_M2_AMT - BILL_M2_AMT AS LABOR_M2_AMT,
			TOTAL_M3_AMT - BILL_M3_AMT AS LABOR_M3_AMT,
			TOTAL_M4_AMT - BILL_M4_AMT AS LABOR_M4_AMT,
			TOTAL_M5_AMT - BILL_M5_AMT AS LABOR_M5_AMT,
			TOTAL_M6_AMT - BILL_M6_AMT AS LABOR_M6_AMT,
			TOTAL_M7_AMT - BILL_M7_AMT AS LABOR_M7_AMT,
			TOTAL_M8_AMT - BILL_M8_AMT AS LABOR_M8_AMT,
			TOTAL_M9_AMT - BILL_M9_AMT AS LABOR_M9_AMT,
			TOTAL_M10_AMT - BILL_M10_AMT AS LABOR_M10_AMT,
			TOTAL_M11_AMT - BILL_M11_AMT AS LABOR_M11_AMT,
			TOTAL_M12_AMT - BILL_M12_AMT AS LABOR_M12_AMT
		FROM RSP_ORG_TOTAL_LABOR AS TOTAL
		INNER JOIN RSP_ORG_B_LABOR AS B
		ON TOTAL.YEAR = B.YEAR
		AND LPAD(TOTAL.MONTH,2,'0') = LPAD(B.MONTH,2,'0')
		AND TOTAL.CCORG_CD = B.CCORG_CD
		AND TOTAL.VER = B.VER
	) AS S
	ON (
		1=1
		AND T.YEAR = S.YEAR
		AND T.MONTH = S.MONTH
		AND T.CCORG_CD = S.CCORG_CD
		AND T.VER = :VER
	)
	WHEN MATCHED THEN
		UPDATE SET
			T.MODIFIEDAT = :V_START_TIME,
			T.MODIFIEDBY = :V_USER_NAME,
			T.LABOR_M1_AMT = S.LABOR_M1_AMT,
			T.LABOR_M2_AMT = S.LABOR_M2_AMT,
			T.LABOR_M3_AMT = S.LABOR_M3_AMT,
			T.LABOR_M4_AMT = S.LABOR_M4_AMT,
			T.LABOR_M5_AMT = S.LABOR_M5_AMT,
			T.LABOR_M6_AMT = S.LABOR_M6_AMT,
			T.LABOR_M7_AMT = S.LABOR_M7_AMT,
			T.LABOR_M8_AMT = S.LABOR_M8_AMT,
			T.LABOR_M9_AMT = S.LABOR_M9_AMT,
			T.LABOR_M10_AMT = S.LABOR_M10_AMT,
			T.LABOR_M11_AMT = S.LABOR_M11_AMT,
			T.LABOR_M12_AMT = S.LABOR_M12_AMT
	WHEN NOT MATCHED THEN    	
		INSERT (
			CREATEDAT,
			CREATEDBY,
			MODIFIEDAT,
			MODIFIEDBY,
			VER,
			YEAR,
			MONTH,
			CCORG_CD,
			LABOR_M1_AMT,
			LABOR_M2_AMT,
			LABOR_M3_AMT,
			LABOR_M4_AMT,
			LABOR_M5_AMT,
			LABOR_M6_AMT,
			LABOR_M7_AMT,
			LABOR_M8_AMT,
			LABOR_M9_AMT,
			LABOR_M10_AMT,
			LABOR_M11_AMT,
			LABOR_M12_AMT,
			SHARED_EXP_YN
		)
		VALUES (
			:V_START_TIME,
			:V_USER_NAME,
			:V_START_TIME,
			:V_USER_NAME,
			S.VER,
			S.YEAR,
			LPAD(S.MONTH,2,'0'),
			S.CCORG_CD,
			S.LABOR_M1_AMT,
			S.LABOR_M2_AMT,
			S.LABOR_M3_AMT,
			S.LABOR_M4_AMT,
			S.LABOR_M5_AMT,
			S.LABOR_M6_AMT,
			S.LABOR_M7_AMT,
			S.LABOR_M8_AMT,
			S.LABOR_M9_AMT,
			S.LABOR_M10_AMT,
			S.LABOR_M11_AMT,
			S.LABOR_M12_AMT,
			false				-- expense 전사여부 임시 FALSE 처리
		);

	V_INSERT_CNT = ::ROWCOUNT;
	:O_RESULT.INSERT(('OK', :VER, NULL, '[OK] STEP-2 [PASS]-['||:V_IF_TABLE||' INSERT COUNT =>'||:V_INSERT_CNT||']'));

	INSERT INTO COMMON_INTERFACE_LOG
	(VER, UUID, CREATEDAT, IF_STEP, SOURCE, TABLE_NAME, PROCEDURE_NAME, EXECUTE_TIME, ROW_COUNT, SUCCESS_YN, ERR_CD, LOG)
	VALUES
	(:VER, SYSUUID, CURRENT_TIMESTAMP, 'TRSF', 'RSP_IF_ORG_TOTAL_LABOR', :V_IF_TABLE, ::CURRENT_OBJECT_NAME, ROUND(SECONDS_BETWEEN(CURRENT_TIMESTAMP, :V_START_TIME) * 1000,0), :V_INSERT_CNT, true, null, null);

	UPDATE RSP_IF_ORG_TOTAL_LABOR
	SET FLAG = 'S'
	WHERE FLAG IS NULL
	AND VER = :VER;

	-- [STEP-3] I/F DATA 등록 처리결과 등록
	:O_RESULT.INSERT(('OK', :VER, NULL, '[OK]-PROCEDURE SUCCESS... COUNT => ['||:V_INSERT_CNT||']'));

END;