/**
* PROJECT 정보 I/F TABLE -> BIX TABLE TRANSFER
*
* > O_RESULT : 로그 저장
*/
PROCEDURE P_IF_SGA_INVESTMENT_ERP_TRSF (
	IN VER NVARCHAR(20),
	OUT O_RESULT TABLE (
		RESULT_CODE NVARCHAR(30)
		, VER NVARCHAR(20)
		, SQL_ERROR_CODE NVARCHAR(30)
		, SQL_ERROR_MESSAGE NVARCHAR(500)
	)
)
LANGUAGE SQLSCRIPT
SQL SECURITY INVOKER
AS
BEGIN
USING SQLSCRIPT_PRINT AS LIB;
	
	DECLARE V_USER_NAME NVARCHAR(10) = 'IF_SYS';
	DECLARE V_START_TIME TIMESTAMP DEFAULT CURRENT_TIMESTAMP;
	DECLARE V_IF_TABLE NVARCHAR(50) DEFAULT 'SGA_IF_INVESTMENT';
	DECLARE V_INSERT_CNT INTEGER = 0;
	DECLARE V_DUMMY INTEGER;

	/* SQL ERROR 처리 */
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		ROLLBACK;

		:O_RESULT.INSERT(('NG', :VER, ::SQL_ERROR_CODE, SUBSTR(::SQL_ERROR_MESSAGE,0,500)));

		INSERT INTO COMMON_INTERFACE_LOG
		(VER, UUID, CREATEDAT, IF_STEP, SOURCE, TABLE_NAME, PROCEDURE_NAME, EXECUTE_TIME, ROW_COUNT, SUCCESS_YN, ERR_CD, LOG)
		VALUES
		(:VER, SYSUUID, CURRENT_TIMESTAMP, 'TRSF', 'SGA_IF_INVESTMENT', :V_IF_TABLE, ::CURRENT_OBJECT_NAME, NULL, NULL, false, ::SQL_ERROR_CODE, SUBSTR(::SQL_ERROR_MESSAGE,0,500));	

	END;

	/***********************************************
	VALIDATION
	***********************************************/

	:O_RESULT.INSERT(('OK', :VER, NULL, '[OK]-STEP [PROCEDURE START]'));

	-- [STEP-1] I/F 테이블 확인 (해당 버전 데이터가 IF 테이블에 존재하는지 체크)
	
	SELECT 1
	INTO V_DUMMY
	FROM SGA_IF_INVESTMENT
	WHERE VER = :VER
	-- AND FLAG IS NULL	-- FLAG 사용 의미가 없어짐, 우선 생략 추후 제거 or 로직 정리
	LIMIT 1
	;
		
	-- [STEP-2] IF DATA 등록

	-- V_START_TIME = CURRENT_TIMESTAMP;
	-- V_IF_TABLE = 'SGA_WIDEVIEW';

	-- MERGE INTO SGA_WIDEVIEW T
	-- USING (
	-- 	SELECT
	-- 		VER,
	-- 		YEAR,
	-- 		LPAD(MONTH,2,'0') AS MONTH,
	-- 		CCORG_CD,
	-- 		SUM(IV_COST_M1_AMT) AS IV_COST_M1_AMT,
	-- 		SUM(IV_COST_M2_AMT) AS IV_COST_M2_AMT,
	-- 		SUM(IV_COST_M3_AMT) AS IV_COST_M3_AMT,
	-- 		SUM(IV_COST_M4_AMT) AS IV_COST_M4_AMT,
	-- 		SUM(IV_COST_M5_AMT) AS IV_COST_M5_AMT,
	-- 		SUM(IV_COST_M6_AMT) AS IV_COST_M6_AMT,
	-- 		SUM(IV_COST_M7_AMT) AS IV_COST_M7_AMT,
	-- 		SUM(IV_COST_M8_AMT) AS IV_COST_M8_AMT,
	-- 		SUM(IV_COST_M9_AMT) AS IV_COST_M9_AMT,
	-- 		SUM(IV_COST_M10_AMT) AS IV_COST_M10_AMT,
	-- 		SUM(IV_COST_M11_AMT) AS IV_COST_M11_AMT,
	-- 		SUM(IV_COST_M12_AMT) AS IV_COST_M12_AMT
	-- 	FROM SGA_IF_INVESTMENT
	-- 	WHERE VER = :VER
	-- 	-- AND FLAG IS NULL	-- FLAG 사용 의미가 없어짐, 우선 생략 추후 제거 or 로직 정리
	-- 	GROUP BY VER, YEAR, MONTH, CCORG_CD
	-- ) AS S
	-- ON (
	-- 1=1
	-- AND T.YEAR = S.YEAR
	-- AND T.MONTH = S.MONTH
	-- AND T.CCORG_CD = S.CCORG_CD
	-- -- AND T.VER = S.VER
	-- )
	-- WHEN MATCHED THEN
	-- 	UPDATE SET
	-- 		T.MODIFIEDAT = :V_START_TIME,
	-- 		T.MODIFIEDBY = :V_USER_NAME,
	-- 		T.IV_M1_AMT = S.IV_COST_M1_AMT,
	-- 		T.IV_M2_AMT = S.IV_COST_M2_AMT,
	-- 		T.IV_M3_AMT = S.IV_COST_M3_AMT,
	-- 		T.IV_M4_AMT = S.IV_COST_M4_AMT,
	-- 		T.IV_M5_AMT = S.IV_COST_M5_AMT,
	-- 		T.IV_M6_AMT = S.IV_COST_M6_AMT,
	-- 		T.IV_M7_AMT = S.IV_COST_M7_AMT,
	-- 		T.IV_M8_AMT = S.IV_COST_M8_AMT,
	-- 		T.IV_M9_AMT = S.IV_COST_M9_AMT,
	-- 		T.IV_M10_AMT = S.IV_COST_M10_AMT,
	-- 		T.IV_M11_AMT = S.IV_COST_M11_AMT,
	-- 		T.IV_M12_AMT = S.IV_COST_M12_AMT
	-- WHEN NOT MATCHED THEN    	
	-- 	INSERT (
	-- 		CREATEDAT,
	-- 		CREATEDBY,
	-- 		MODIFIEDAT,
	-- 		MODIFIEDBY,
	-- 		VER,
	-- 		YEAR,
	-- 		MONTH,
	-- 		CCORG_CD,
	-- 		IV_M1_AMT,
	-- 		IV_M2_AMT,
	-- 		IV_M3_AMT,
	-- 		IV_M4_AMT,
	-- 		IV_M5_AMT,
	-- 		IV_M6_AMT,
	-- 		IV_M7_AMT,
	-- 		IV_M8_AMT,
	-- 		IV_M9_AMT,
	-- 		IV_M10_AMT,
	-- 		IV_M11_AMT,
	-- 		IV_M12_AMT,
	-- 		SHARED_EXP_YN
	-- 	)
	-- 	VALUES (
	-- 		:V_START_TIME,
	-- 		:V_USER_NAME,
	-- 		:V_START_TIME,
	-- 		:V_USER_NAME,
	-- 		S.VER,
	-- 		S.YEAR,
	-- 		S.MONTH,
	-- 		S.CCORG_CD,
	-- 		S.IV_COST_M1_AMT,
	-- 		S.IV_COST_M2_AMT,
	-- 		S.IV_COST_M3_AMT,
	-- 		S.IV_COST_M4_AMT,
	-- 		S.IV_COST_M5_AMT,
	-- 		S.IV_COST_M6_AMT,
	-- 		S.IV_COST_M7_AMT,
	-- 		S.IV_COST_M8_AMT,
	-- 		S.IV_COST_M9_AMT,
	-- 		S.IV_COST_M10_AMT,
	-- 		S.IV_COST_M11_AMT,
	-- 		S.IV_COST_M12_AMT,
	-- 		false
	-- 	);
	
	-- V_INSERT_CNT = ::ROWCOUNT;
	-- :O_RESULT.INSERT(('OK', :VER, NULL, '[OK] STEP-2 [PASS]-['||:V_IF_TABLE||' INSERT COUNT =>'||:V_INSERT_CNT||']'));

	-- INSERT INTO COMMON_INTERFACE_LOG
	-- (VER, UUID, CREATEDAT, IF_STEP, SOURCE, TABLE_NAME, PROCEDURE_NAME, EXECUTE_TIME, ROW_COUNT, SUCCESS_YN, ERR_CD, LOG)
	-- VALUES
	-- (:VER, SYSUUID, CURRENT_TIMESTAMP, 'TRSF', 'SGA_IF_INVESTMENT', :V_IF_TABLE, ::CURRENT_OBJECT_NAME, ROUND(SECONDS_BETWEEN(CURRENT_TIMESTAMP, :V_START_TIME) * 1000,0), :V_INSERT_CNT, true, null, null);

	-- SGA_INVESTMENT

	V_START_TIME = CURRENT_TIMESTAMP;
	V_IF_TABLE = 'SGA_INVESTMENT';

	INSERT INTO SGA_INVESTMENT (
		CREATEDAT,
		CREATEDBY,
		MODIFIEDAT,
		MODIFIEDBY,
		VER,
		SEQ,
		YEAR,
		MONTH,
		PRJ_NO,
		CCORG_CD,
		GL_ACCOUNT,
		COMMITMENT_ITEM,
		ASSET_YN,
		IV_CASH_M1_AMT,
		IV_CASH_M2_AMT,
		IV_CASH_M3_AMT,
		IV_CASH_M4_AMT,
		IV_CASH_M5_AMT,
		IV_CASH_M6_AMT,
		IV_CASH_M7_AMT,
		IV_CASH_M8_AMT,
		IV_CASH_M9_AMT,
		IV_CASH_M10_AMT,
		IV_CASH_M11_AMT,
		IV_CASH_M12_AMT,
		IV_COST_M1_AMT,
		IV_COST_M2_AMT,
		IV_COST_M3_AMT,
		IV_COST_M4_AMT,
		IV_COST_M5_AMT,
		IV_COST_M6_AMT,
		IV_COST_M7_AMT,
		IV_COST_M8_AMT,
		IV_COST_M9_AMT,
		IV_COST_M10_AMT,
		IV_COST_M11_AMT,
		IV_COST_M12_AMT
	)
	WITH IF_DATA AS (
		SELECT
			VER,
			SEQ,
			YEAR,
			LPAD(MONTH,2,'0') AS MONTH,
			PRJ_NO,
			CCORG_CD,
			GL_ACCOUNT,
			COMMITMENT_ITEM,
			CASE ASSET_YN
				WHEN 'Y' THEN TRUE
				ELSE FALSE
			END AS ASSET_YN,
			IV_CASH_M1_AMT,
			IV_CASH_M2_AMT,
			IV_CASH_M3_AMT,
			IV_CASH_M4_AMT,
			IV_CASH_M5_AMT,
			IV_CASH_M6_AMT,
			IV_CASH_M7_AMT,
			IV_CASH_M8_AMT,
			IV_CASH_M9_AMT,
			IV_CASH_M10_AMT,
			IV_CASH_M11_AMT,
			IV_CASH_M12_AMT,
			IV_COST_M1_AMT,
			IV_COST_M2_AMT,
			IV_COST_M3_AMT,
			IV_COST_M4_AMT,
			IV_COST_M5_AMT,
			IV_COST_M6_AMT,
			IV_COST_M7_AMT,
			IV_COST_M8_AMT,
			IV_COST_M9_AMT,
			IV_COST_M10_AMT,
			IV_COST_M11_AMT,
			IV_COST_M12_AMT
		FROM SGA_IF_INVESTMENT
		WHERE VER = :VER
		-- AND FLAG IS NULL	-- FLAG 사용 의미가 없어짐, 우선 생략 추후 제거 or 로직 정리
	)
	SELECT
		:V_START_TIME,
		:V_USER_NAME,
		:V_START_TIME,
		:V_USER_NAME,
		VER,
		SEQ,
		YEAR,
		MONTH,
		PRJ_NO,
		CCORG_CD,
		GL_ACCOUNT,
		COMMITMENT_ITEM,
		ASSET_YN,
		IFNULL(IV_CASH_M1_AMT,0),
		IFNULL(IV_CASH_M2_AMT,0),
		IFNULL(IV_CASH_M3_AMT,0),
		IFNULL(IV_CASH_M4_AMT,0),
		IFNULL(IV_CASH_M5_AMT,0),
		IFNULL(IV_CASH_M6_AMT,0),
		IFNULL(IV_CASH_M7_AMT,0),
		IFNULL(IV_CASH_M8_AMT,0),
		IFNULL(IV_CASH_M9_AMT,0),
		IFNULL(IV_CASH_M10_AMT,0),
		IFNULL(IV_CASH_M11_AMT,0),
		IFNULL(IV_CASH_M12_AMT,0),
		IFNULL(IV_COST_M1_AMT,0),
		IFNULL(IV_COST_M2_AMT,0),
		IFNULL(IV_COST_M3_AMT,0),
		IFNULL(IV_COST_M4_AMT,0),
		IFNULL(IV_COST_M5_AMT,0),
		IFNULL(IV_COST_M6_AMT,0),
		IFNULL(IV_COST_M7_AMT,0),
		IFNULL(IV_COST_M8_AMT,0),
		IFNULL(IV_COST_M9_AMT,0),
		IFNULL(IV_COST_M10_AMT,0),
		IFNULL(IV_COST_M11_AMT,0),
		IFNULL(IV_COST_M12_AMT,0)
	FROM IF_DATA;

	V_INSERT_CNT = ::ROWCOUNT;
	:O_RESULT.INSERT(('OK', :VER, NULL, '[OK] STEP-2 [PASS]-['||:V_IF_TABLE||' INSERT COUNT =>'||:V_INSERT_CNT||']'));

	INSERT INTO COMMON_INTERFACE_LOG
	(VER, UUID, CREATEDAT, IF_STEP, SOURCE, TABLE_NAME, PROCEDURE_NAME, EXECUTE_TIME, ROW_COUNT, SUCCESS_YN, ERR_CD, LOG)
	VALUES
	(:VER, SYSUUID, CURRENT_TIMESTAMP, 'TRSF', 'SGA_IF_INVESTMENT', :V_IF_TABLE, ::CURRENT_OBJECT_NAME, ROUND(SECONDS_BETWEEN(CURRENT_TIMESTAMP, :V_START_TIME) * 1000,0), :V_INSERT_CNT, true, null, null);

	UPDATE SGA_IF_INVESTMENT
	SET FLAG = 'S'
	WHERE FLAG IS NULL
	AND VER = :VER;

	-- [STEP-3] I/F DATA 등록 처리결과 등록
	:O_RESULT.INSERT(('OK', :VER, NULL, '[OK]-PROCEDURE SUCCESS... COUNT => ['||:V_INSERT_CNT||']'));	

END;