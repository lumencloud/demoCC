/*
* SFDC DT 과제 정보
*/
PROCEDURE P_IF_COMMON_DT_TASK_SFDC_RCV
    (
        IN VER NVARCHAR(20),
        IN JSONData  CLOB
    )
LANGUAGE SQLSCRIPT SQL SECURITY INVOKER AS
BEGIN

    DECLARE V_IF_TABLE NVARCHAR(50) := 'COMMON_IF_DT_TASK';
	DECLARE V_START_TIME TIMESTAMP DEFAULT CURRENT_TIMESTAMP;
	DECLARE V_INSERT_CNT INTEGER := 0;

    INSERT INTO COMMON_IF_DT_TASK (
        -- 인터페이스 정보
        VER,
        FLAG,
        -- 인터페이스 테이블 컬럼
        DGTR_TASK_CD,
        DGTR_TASK_NM
    ) 
    WITH JSONData AS (SELECT :JSONData as JSONData FROM DUMMY) 
    SELECT 
        -- 인터페이스 정보
		:VER AS VER,
		NULL AS FLAG,
		-- 인터페이스 JSON 데이터 컬럼
        JT.DGTR_TASK_CD,
        JT.DGTR_TASK_NM
    FROM
        JSON_TABLE (JSONData.JSONData, '$.records[*]'
        COLUMNS
            (
                DGTR_TASK_CD NVARCHAR(20) 		PATH '$.Value',
                DGTR_TASK_NM NVARCHAR(50) 		PATH '$.Label'
            )
        ) AS JT;

    V_INSERT_CNT = ::ROWCOUNT;

	INSERT INTO COMMON_INTERFACE_LOG
	(VER, UUID, CREATEDAT, IF_STEP, SOURCE, TABLE_NAME, PROCEDURE_NAME, EXECUTE_TIME, ROW_COUNT, SUCCESS_YN, ERR_CD, LOG)
	VALUES
	(:VER, SYSUUID, CURRENT_TIMESTAMP, 'RCV', 'SFDC', :V_IF_TABLE, ::CURRENT_OBJECT_NAME, ROUND(SECONDS_BETWEEN(CURRENT_TIMESTAMP, :V_START_TIME) * 1000,0), :V_INSERT_CNT, true, null, null);

END;