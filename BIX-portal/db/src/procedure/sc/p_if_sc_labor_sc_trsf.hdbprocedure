/**
* PROJECT 정보 I/F TABLE -> BIX TABLE TRANSFER
*
* > O_RESULT : 로그 저장
*/
PROCEDURE P_IF_SC_LABOR_SC_TRSF (
	IN VER NVARCHAR(20),
	OUT O_RESULT TABLE (
		RESULT_CODE NVARCHAR(30)
		, VER NVARCHAR(20)
		, SQL_ERROR_CODE NVARCHAR(30)
		, SQL_ERROR_MESSAGE NVARCHAR(500)
	)
)
LANGUAGE SQLSCRIPT
SQL SECURITY INVOKER
AS
BEGIN
USING SQLSCRIPT_PRINT AS LIB;
	
	DECLARE V_USER_NAME NVARCHAR(10) = 'IF_SYS';
	DECLARE V_START_TIME TIMESTAMP DEFAULT CURRENT_TIMESTAMP;
	DECLARE V_IF_TABLE NVARCHAR(50) DEFAULT 'SC_IF_LABOR';
	DECLARE V_INSERT_CNT INTEGER = 0;
	DECLARE V_DUMMY INTEGER;

	/* SQL ERROR 처리 */
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		ROLLBACK;

		:O_RESULT.INSERT(('NG', :VER, ::SQL_ERROR_CODE, SUBSTR(::SQL_ERROR_MESSAGE,0,500)));

		INSERT INTO COMMON_INTERFACE_LOG
		(VER, UUID, CREATEDAT, IF_STEP, SOURCE, TABLE_NAME, PROCEDURE_NAME, EXECUTE_TIME, ROW_COUNT, SUCCESS_YN, ERR_CD, LOG)
		VALUES
		(:VER, SYSUUID, CURRENT_TIMESTAMP, 'TRSF', 'SC_IF_LABOR', :V_IF_TABLE, ::CURRENT_OBJECT_NAME, NULL, NULL, false, ::SQL_ERROR_CODE, SUBSTR(::SQL_ERROR_MESSAGE,0,500));	

	END;

	/***********************************************
	VALIDATION
	***********************************************/

	:O_RESULT.INSERT(('OK', :VER, NULL, '[OK]-STEP [PROCEDURE START]'));

	-- [STEP-1] I/F 테이블 확인 (해당 버전 데이터가 IF 테이블에 존재하는지 체크)
	
	SELECT 1
	INTO V_DUMMY
	FROM SC_IF_LABOR
	WHERE FLAG IS NULL
	LIMIT 1
	;
		
	-- [STEP-2] IF DATA 등록
	V_START_TIME = CURRENT_TIMESTAMP;
	V_IF_TABLE = 'SC_WIDEVIEW';

	MERGE INTO SC_WIDEVIEW T
	USING (
		SELECT
			VER,
			YEAR,
			MONTH,
			CCORG_CD,
			SUM(IFNULL(LABOR_M1_AMT,0)) AS LABOR_M1_AMT,
			SUM(IFNULL(LABOR_M2_AMT,0)) AS LABOR_M2_AMT,
			SUM(IFNULL(LABOR_M3_AMT,0)) AS LABOR_M3_AMT,
			SUM(IFNULL(LABOR_M4_AMT,0)) AS LABOR_M4_AMT,
			SUM(IFNULL(LABOR_M5_AMT,0)) AS LABOR_M5_AMT,
			SUM(IFNULL(LABOR_M6_AMT,0)) AS LABOR_M6_AMT,
			SUM(IFNULL(LABOR_M7_AMT,0)) AS LABOR_M7_AMT,
			SUM(IFNULL(LABOR_M8_AMT,0)) AS LABOR_M8_AMT,
			SUM(IFNULL(LABOR_M9_AMT,0)) AS LABOR_M9_AMT,
			SUM(IFNULL(LABOR_M10_AMT,0)) AS LABOR_M10_AMT,
			SUM(IFNULL(LABOR_M11_AMT,0)) AS LABOR_M11_AMT,
			SUM(IFNULL(LABOR_M12_AMT,0)) AS LABOR_M12_AMT
		FROM (
			SELECT
				:VER,
				YEAR,
				LPAD(MONTH,2,'0') AS MONTH,
				CCORG_CD,
				LABOR_M1_AMT,
				LABOR_M2_AMT,
				LABOR_M3_AMT,
				LABOR_M4_AMT,
				LABOR_M5_AMT,
				LABOR_M6_AMT,
				LABOR_M7_AMT,
				LABOR_M8_AMT,
				LABOR_M9_AMT,
				LABOR_M10_AMT,
				LABOR_M11_AMT,
				LABOR_M12_AMT
			FROM SC_IF_LABOR
			WHERE FLAG IS NULL -- FLAG 사용 의미가 없어짐, 우선 생략 추후 제거 or 로직 정리
		)
		GROUP BY 
			VER, 
			YEAR, MONTH, CCORG_CD
	) AS S
	ON (
		1=1
		AND T.YEAR = S.YEAR
		AND T.MONTH = S.MONTH
		AND T.CCORG_CD = S.CCORG_CD
		AND T.VER = S.VER
	)
	WHEN MATCHED THEN
		UPDATE SET
			T.MODIFIEDAT = :V_START_TIME,
			T.MODIFIEDBY = :V_USER_NAME,
			T.LABOR_M1_AMT = IFNULL(S.LABOR_M1_AMT,0),
			T.LABOR_M2_AMT = IFNULL(S.LABOR_M2_AMT,0),
			T.LABOR_M3_AMT = IFNULL(S.LABOR_M3_AMT,0),
			T.LABOR_M4_AMT = IFNULL(S.LABOR_M4_AMT,0),
			T.LABOR_M5_AMT = IFNULL(S.LABOR_M5_AMT,0),
			T.LABOR_M6_AMT = IFNULL(S.LABOR_M6_AMT,0),
			T.LABOR_M7_AMT = IFNULL(S.LABOR_M7_AMT,0),
			T.LABOR_M8_AMT = IFNULL(S.LABOR_M8_AMT,0),
			T.LABOR_M9_AMT = IFNULL(S.LABOR_M9_AMT,0),
			T.LABOR_M10_AMT = IFNULL(S.LABOR_M10_AMT,0),
			T.LABOR_M11_AMT = IFNULL(S.LABOR_M11_AMT,0),
			T.LABOR_M12_AMT = IFNULL(S.LABOR_M12_AMT,0)
	WHEN NOT MATCHED THEN    	
		INSERT (
			CREATEDAT,
			CREATEDBY,
			MODIFIEDAT,
			MODIFIEDBY,
			VER,
			YEAR,
			MONTH,
			CCORG_CD,
			LABOR_M1_AMT,
			LABOR_M2_AMT,
			LABOR_M3_AMT,
			LABOR_M4_AMT,
			LABOR_M5_AMT,
			LABOR_M6_AMT,
			LABOR_M7_AMT,
			LABOR_M8_AMT,
			LABOR_M9_AMT,
			LABOR_M10_AMT,
			LABOR_M11_AMT,
			LABOR_M12_AMT
		)
		VALUES (
			:V_START_TIME,
			:V_USER_NAME,
			:V_START_TIME,
			:V_USER_NAME,
			S.VER,
			S.YEAR,
			S.MONTH,
			S.CCORG_CD,
			IFNULL(S.LABOR_M1_AMT,0),
			IFNULL(S.LABOR_M2_AMT,0),
			IFNULL(S.LABOR_M3_AMT,0),
			IFNULL(S.LABOR_M4_AMT,0),
			IFNULL(S.LABOR_M5_AMT,0),
			IFNULL(S.LABOR_M6_AMT,0),
			IFNULL(S.LABOR_M7_AMT,0),
			IFNULL(S.LABOR_M8_AMT,0),
			IFNULL(S.LABOR_M9_AMT,0),
			IFNULL(S.LABOR_M10_AMT,0),
			IFNULL(S.LABOR_M11_AMT,0),
			IFNULL(S.LABOR_M12_AMT,0)
		);
	
	V_INSERT_CNT = ::ROWCOUNT;
	:O_RESULT.INSERT(('OK', :VER, NULL, '[OK] STEP-2 [PASS]-['||:V_IF_TABLE||' INSERT COUNT =>'||:V_INSERT_CNT||']'));

	INSERT INTO COMMON_INTERFACE_LOG
	(VER, UUID, CREATEDAT, IF_STEP, SOURCE, TABLE_NAME, PROCEDURE_NAME, EXECUTE_TIME, ROW_COUNT, SUCCESS_YN, ERR_CD, LOG)
	VALUES
	(:VER, SYSUUID, CURRENT_TIMESTAMP, 'TRSF', 'SC_IF_LABOR', :V_IF_TABLE, ::CURRENT_OBJECT_NAME, ROUND(SECONDS_BETWEEN(CURRENT_TIMESTAMP, :V_START_TIME) * 1000,0), :V_INSERT_CNT, true, null, null);

	-- SC_LABOR

	V_START_TIME = CURRENT_TIMESTAMP;
	V_IF_TABLE = 'SC_LABOR';

	INSERT INTO SC_LABOR (
		CREATEDAT,
		CREATEDBY,
		MODIFIEDAT,
		MODIFIEDBY,
		VER,
		YEAR,
		MONTH,
		CCORG_CD,
		GL_ACCOUNT,
		COMMITMENT_ITEM,
		LABOR_M1_AMT,
		LABOR_M2_AMT,
		LABOR_M3_AMT,
		LABOR_M4_AMT,
		LABOR_M5_AMT,
		LABOR_M6_AMT,
		LABOR_M7_AMT,
		LABOR_M8_AMT,
		LABOR_M9_AMT,
		LABOR_M10_AMT,
		LABOR_M11_AMT,
		LABOR_M12_AMT
	)
	WITH IF_DATA AS (
		SELECT
			YEAR,
			LPAD(MONTH,2,'0') AS MONTH,
			CCORG_CD,
			GL_ACCOUNT,
			COMMITMENT_ITEM,
			LABOR_M1_AMT,
			LABOR_M2_AMT,
			LABOR_M3_AMT,
			LABOR_M4_AMT,
			LABOR_M5_AMT,
			LABOR_M6_AMT,
			LABOR_M7_AMT,
			LABOR_M8_AMT,
			LABOR_M9_AMT,
			LABOR_M10_AMT,
			LABOR_M11_AMT,
			LABOR_M12_AMT
		FROM SC_IF_LABOR
		WHERE FLAG IS NULL -- FLAG 사용 의미가 없어짐, 우선 생략 추후 제거 or 로직 정리
	)
	SELECT
		:V_START_TIME,
		:V_USER_NAME,
		:V_START_TIME,
		:V_USER_NAME,
		:VER,
		YEAR,
		MONTH,
		CCORG_CD,
		GL_ACCOUNT,
		COMMITMENT_ITEM,
		
		IFNULL(LABOR_M1_AMT,0),
		IFNULL(LABOR_M2_AMT,0),
		IFNULL(LABOR_M3_AMT,0),
		IFNULL(LABOR_M4_AMT,0),
		IFNULL(LABOR_M5_AMT,0),
		IFNULL(LABOR_M6_AMT,0),
		IFNULL(LABOR_M7_AMT,0),
		IFNULL(LABOR_M8_AMT,0),
		IFNULL(LABOR_M9_AMT,0),
		IFNULL(LABOR_M10_AMT,0),
		IFNULL(LABOR_M11_AMT,0),
		IFNULL(LABOR_M12_AMT,0)
	FROM IF_DATA;

	V_INSERT_CNT = ::ROWCOUNT;
	:O_RESULT.INSERT(('OK', :VER, NULL, '[OK] STEP-2 [PASS]-['||:V_IF_TABLE||' INSERT COUNT =>'||:V_INSERT_CNT||']'));

	INSERT INTO COMMON_INTERFACE_LOG
	(VER, UUID, CREATEDAT, IF_STEP, SOURCE, TABLE_NAME, PROCEDURE_NAME, EXECUTE_TIME, ROW_COUNT, SUCCESS_YN, ERR_CD, LOG)
	VALUES
	(:VER, SYSUUID, CURRENT_TIMESTAMP, 'TRSF', 'SC_IF_LABOR', :V_IF_TABLE, ::CURRENT_OBJECT_NAME, ROUND(SECONDS_BETWEEN(CURRENT_TIMESTAMP, :V_START_TIME) * 1000,0), :V_INSERT_CNT, true, null, null);

	UPDATE SC_IF_LABOR
	SET FLAG = 'S'
	WHERE FLAG IS NULL
	AND VER = :VER;

	-- [STEP-3] I/F DATA 등록 처리결과 등록
	:O_RESULT.INSERT(('OK', :VER, NULL, '[OK]-PROCEDURE SUCCESS... COUNT => ['||:V_INSERT_CNT||']'));
	
END;